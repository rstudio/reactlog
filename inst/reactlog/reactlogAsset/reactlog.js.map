{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./srcjs/cyto/cytoClasses.js","webpack:///./srcjs/cyto/cytoOn.js","webpack:///./srcjs/cyto/cytoStyle.js","webpack:///./srcjs/cyto/cytoscapeInit.js","webpack:///./srcjs/cyto/layoutOptions.js","webpack:///./srcjs/graph/ActiveStateStatus.js","webpack:///./srcjs/graph/Edge.js","webpack:///./srcjs/graph/GhostEdge.js","webpack:///./srcjs/graph/Graph.js","webpack:///./srcjs/graph/GraphAtStep.js","webpack:///./srcjs/graph/HoverStatus.js","webpack:///./srcjs/graph/Node.js","webpack:///./srcjs/graph/StatusArr.js","webpack:///./srcjs/index.js","webpack:///./srcjs/layout/keydown.js","webpack:///./srcjs/layout/logEntry.js","webpack:///./srcjs/layout/progressBar.js","webpack:///./srcjs/log/initStep.js","webpack:///./srcjs/log/logStates.js","webpack:///./srcjs/rlog.js","webpack:///./srcjs/style/colors.js","webpack:///./srcjs/updateGraph/atTick.js","webpack:///./srcjs/updateGraph/buttons.js","webpack:///./srcjs/updateGraph/hoverStickyFilterSearch.js","webpack:///./srcjs/updateGraph/idle.js","webpack:///./srcjs/updateGraph/index.js","webpack:///./srcjs/updateGraph/outputCalc.js","webpack:///./srcjs/updateGraph/resize.js","webpack:///./srcjs/updateGraph/searchString.js","webpack:///./srcjs/updateGraph/step.js","webpack:///./srcjs/updateGraph/tick.js","webpack:///./srcjs/updateGraph/userMarks.js","webpack:///./srcjs/utils/ArrayHelper.js","webpack:///./srcjs/utils/MapHelper.js","webpack:///./srcjs/utils/console.js","webpack:///./srcjs/utils/numbers.js"],"names":["classes","node","edge","edgeGhost","edgeIsolate","nodeStart","nodeMiddle","nodeEnd","nodeStartBig","nodeMiddleBig","nodeEndBig","nodeEnter","nodeEnterActive","nodeInvalidate","nodeInvalidateActive","nodeInvalidateDone","nodeIsolate","nodeIsolateInvalidate","nodeFrozen","nodeValueChanged","hoverNotFocused","hoverNotFocusedButSticky","edgeGhostHoverNotFocused","edgeGhostHoverNotFocusedButSticky","stickyNotFocused","nodeFiltered","nodeFilteredStart","nodeFilteredMiddle","nodeFilteredEnd","nodeSelected","edgeSelected","edgeGhostSelected","nodeHidden","edgeHidden","onMouseOver","cyto","evt","target","hasCalled","debounced","updateGraph","hoverData","data","once","evtOut","cancel","hoverDataReset","onClick","cytoClickedBefore","cytoClickedTimeout","blur","clearTimeout","trigger","setTimeout","rlog","stickyDatasReset","stickyDatas","onDblClick","resetHoverStickyFilterData","searchRegexReset","searchStringWithData","addOnMethods","on","styleHelper","selector","style","nodeShapes","start","shape","width","height","middle","end","pulseScale","selectedScale","edgePixelWidth","labelWidth","maxTextWidth","graphStyles","default","label","color","colors","nodes","label_text_color","label_text_opacity","regular","black","ready","label_background_color","label_background_opacity","startBig","middleBig","endBig","enter","calculating","enterActive","invalidate","invalidating","invalidateActive","invalidateDone","invalidated","isolate","isolateInvalidate","valueChanged","frozen","edges","running","ghostEdge","ghostEdges","grey2","focus","selected","filtered","hidden","opacity","withContainer","container","boxSelectionEnabled","autounselectify","layout","layoutOptions","wheelSensitivity","cytoClasses","cytoOn","cytoscape","use","dagre","fit","name","rankDir","rankSep","nodeSep","edgeSep","ranker","padding","spacingFactor","nodeDimensionsIncludeLabels","animate","animateFilter","i","animationDuration","animationEasing","stateOff","stateOn","stateFinished","ActiveStateStatus","state","activeStep","step","toOn","toOff","resetActive","k","isActive","isOn","ghostKey","reactId","depOnReactId","edgeKey","ctxId","Edge","time","session","status","isGhost","hoverStatus","HoverStatus","isDisplayed","replace","inIsolate","push","valFocused","valNotFocused","sticky","join","retData","group","GhostEdge","key","Graph","log","Map","edgesUnique","activeNodeEnter","activeInvalidateEnter","priorGraph","forEach","set","Node","has","isEdgeLike","hasMatchingEdge","console","error","hoverKey","onFn","get","selectMatchingEdges","map","getParentFromEdge","reactIdFromData","originalReactId","seenMap","Set","reactIdArr","length","pop","parentNodeIds","parentReactId","add","delete","Array","from","sort","concat","childrenNodeIds","ret","ancestorNodeIds","decendentNodeIds","datas","self","familyTreeNodeIds","nodeIds","nodeSet","offFn","lastNodeId","action","LogStates","define","logEntry","updateNodeLabel","valueChange","value","valueChangedStatus","setActiveAtStep","invalidateStart","lastInvalidateNode","invalidateStatus","type","statusAdd","lastNode","enterStatus","reset","isolateInvalidateStart","isolateEnter","invalidateEnd","exit","isolateExit","isolateInvalidateEnd","activeEnterNode","curActiveNode","toFinished","prevData","statusLast","expectedAction","statusRemove","dependsOn","dependsOnRemove","createContext","idle","asyncStart","asyncStop","userMark","freeze","isFrozen","thaw","item","cytoData","ghostEdgeMap","entries","GraphAtStep","originalLog","filterDatas","initStepInfo","finalCompleteGraph","rawGraphAtStep","updateFinalFilteredGraphAndStepsVisible","updateFinalFilteredGraph","updateFilteredStepsVisible","steps","stepsAsyncStart","stepsAsyncStop","stepsIdle","stepsOutputCalc","stepsUserMark","minStep","maxStep","logItem","idleArr","startI","prevLogItem","nextLogItem","stepsVisible","hasLength","filteredStepsVisible","finalFilteredGraph","visibleStep","hasNodeReactId","invalidateLater","priorFilteredStepVisible","idx","kVal","Math","max","min","graph","addEntry","finalGraph","filterGraphOnNodeIds","familyTreeNodeIdsForDatas","hasSomeData","hoverStatusOnNodeIds","highlightSelected","stickyTree","dataArr","updateFilterDatas","regex","matchedElements","test","updateStickyDatasReset","updateFilterDatasReset","updateStickyDatas","resetHoverStickyFilterSearch","val","filteredGraphAtStep","fullNode","fullEdge","cy","cytoOptions","fullFilteredGraphAtStep","startBatch","cyNodes","graphCyto","cytoGraph","graphNodes","nodesLRB","diff","onLayoutReady","someNodeHasNewLabel","right","graphNode","graphNodeData","cytoLabel","cytoLabelShort","cytoStyle","both","cytoNode","cyNode","$id","id","graphClasses","removeStyle","isActiveAtStep","flashClass","left","remove","cyEdges","graphEdges","edgesLRB","graphEdge","graphEdgeData","cytoEdge","endBatch","sortedElements","$","a","b","forceRedraw","fn","cytoLayout","stop","eles","one","run","x","valNotSticky","valSticky","valSelected","valNotSelected","valFiltered","valNotFiltered","toFocused","toSticky","toSelected","toFiltered","toNotFocused","toNotSticky","toNotSelected","toNotFiltered","statusArr","StatusArr","calculationTime","calculationStartMap","startEntryTime","last","containsStatus","displayTimeOnNodes","toFixed","includes","inEnter","isFinished","isSticky","isSelected","isFiltered","isArray","obj","arr","n","expectPrevStatus","curStatus","prevStatus","onError","msg","window","barret","cytoscapeInit","getGraph","click","buttonPrevMark","buttonNextMark","buttonPrevOutputCalc","buttonNextOutputCalc","buttonPrevIdle","buttonNextIdle","buttonPrevStep","buttonNextStep","css","entry","progressBar","setContainers","timelineBackground","addTimelineTicks","timelinePadding","addEventListener","e","resize","maxWait","searchStringContainer","docBody","document","body","layoutKeydown","addKeydown","cytoOpts","zoomLevel","zoom","logZoomLevel","log2","minZoom","pow","lastUserMark","nextIdle","onKeydown","which","altKey","shiftKey","nextTick","curTick","prevTick","sd","fd","sdReactIdStr","fdReactIdStr","stopPropagation","cssVal","jqueryContainer","keydown","containers","timeDecimalDigits","logInfo","logLength","firstTime","lastTimeCharLength","maxSessionCharLength","updateLogEntry","curEntry","timeDiff","padStart","text","padEnd","stepDisplayValPadding","stepDisplayVal","smallerStepVal","smallerStepValVisible","smallerPos","halfStepPos","diffSteps","html","statusForEntry","JSON","stringify","maxVisibleStep","logInfoLength","sessionCharLength","getLabel","getReactIdLabel","getReactIdValue","getContextId","monospaced","txt","contextEntry","defineEntry","dependsOnEntry","dependsOnRemoveEntry","enterEntry","exitEntry","frozenEntry","invalidateLaterEntry","millis","invalidateEndEntry","invalidateStartEntry","isolateEnterEntry","isolateExitEntry","isolateInvalidateEndEntry","isolateInvalidateStartEntry","thawEntry","updateNodeLabelEntry","valueChangeEntry","fillContainer","updateProgressBar","stepsToPresent","tickPos","fullContainerVal","fillContainerVal","progress","timelineHeight","background","updateFromProgressBar","originalEvent","buttons","timeline","currentTarget","pos","pageX","offsetWidth","targetStepPos","round","targetStep","backgroundColor","stepArr","top","visibleSteps","visibleStepLengthMinusOne","topValue","stepPos","append","__APP_DATA__","states","__APP_TIME__","white","green1","green2","green3","greenLite","red","blue","green","purple","purpleLite","orange","yellow","brown","pink","grey","grey1","grey3","active","inactive","lite","atTick","displayAtStep","update","userMarks","prevUserMark","firstStep","nextUserMark","lastStep","prevIdle","outputCalc","prevOutputCalc","nextOutputCalc","prevStep","nextStep","updateHoverData","updateHoverDataReset","filterDatasReset","searchRegex","updateSearchRegex","updateSearchRegexReset","lastIdle","firstIdle","nextStepInArr","nextTickIdx","arrStep","prevStepInArr","prevTickIdx","lastOutputCalc","firstOutputCalc","searchElement","searchStringWith","str","escapeRegExp","RegExp","searchStringSet","searchStringClear","searchStringClearNoUpdate","searchElement_","toString","firstUserMark","flatMap","array","iteratee","mapValues","values","mapKeys","keys","warn","roundDecimals","decimals","roundedNumber","Number"],"mappings":"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","file":"reactlog.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main-._srcjs_c\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./srcjs/index.js\",\"vendors-main-._node_modules_c\",\"vendors-main-._node_modules_cytoscape_dist_cytoscape.cjs.js-44e15bb8\",\"vendors-main-._node_modules_j\",\"vendors-main-._node_modules_lodash_lodash.js-2ef0e502\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// @flow\n\nlet classes = {\n  node: \"node\",\n  edge: \"edge\",\n\n  edgeGhost: \".edgeGhost\",\n  edgeIsolate: \".edgeIsolate\",\n\n  nodeStart: \".nodeStart\",\n  nodeMiddle: \".nodeMiddle\",\n  nodeEnd: \".nodeEnd\",\n\n  nodeStartBig: \".nodeStartBig\",\n  nodeMiddleBig: \".nodeMiddleBig\",\n  nodeEndBig: \".nodeEndBig\",\n\n  nodeEnter: \".nodeEnter\",\n  nodeEnterActive: \".nodeEnterActive\",\n  nodeInvalidate: \".nodeInvalidate\",\n  nodeInvalidateActive: \".nodeInvalidateActive\",\n  nodeInvalidateDone: \".nodeInvalidateDone\",\n  nodeIsolate: \".nodeIsolate\",\n  nodeIsolateInvalidate: \".nodeIsolateInvalidate\",\n\n  nodeFrozen: \".nodeFrozen\",\n\n  nodeValueChanged: \".nodeValueChanged\",\n\n  hoverNotFocused: \".hoverNotFocused\",\n  hoverNotFocusedButSticky: \".hoverNotFocusedButSticky\",\n  edgeGhostHoverNotFocused: \".edgeGhostHoverNotFocused\",\n  edgeGhostHoverNotFocusedButSticky: \".edgeGhostHoverNotFocusedButSticky\",\n  stickyNotFocused: \".stickyNotFocused\",\n\n  nodeFiltered: \".nodeFiltered\",\n  nodeFilteredStart: \".nodeFilteredStart\",\n  nodeFilteredMiddle: \".nodeFilteredMiddle\",\n  nodeFilteredEnd: \".nodeFilteredEnd\",\n\n  nodeSelected: \".nodeSelected\",\n  edgeSelected: \".edgeSelected\",\n  edgeGhostSelected: \".edgeGhostSelected\",\n\n  nodeHidden: \".nodeHidden\",\n  edgeHidden: \".edgeHidden\",\n};\n\nexport default classes;\n","// @flow\nimport $ from \"jquery\";\nimport _debounce from \"lodash/debounce\";\n// import console from \"../utils/console\";\n\nimport { rlog } from \"../rlog\";\nimport * as updateGraph from \"../updateGraph\";\n\nimport type { CytoscapeType, CytoEvent } from \"./cytoFlowType\";\n\n// cytoFamilySuccPred = function(ele, addExtraLayer = true) {\n//   var familyEles = cyto.collection();\n//   if (ele.isEdge()) {\n//     var edge = ele;\n//     if (false) {\n//       // TODO-barret attempt at getting all nodes and edges from final graph\n//       // abandon, as the edge should be stored and constantly retrieved somewhere else\n//       console.log(`#${ele.source().id()} -> #${ele.target().id()}`)\n//       ele = getGraph.finalCyto.$(`#${ele.source().id()} -> #${ele.target().id()}`)\n//     }\n//     familyEles = familyEles\n//       .add(edge)\n//       .add(ele.target())\n//       .add(ele.target().successors())\n//       .add(ele.source())\n//       .add(ele.source().predecessors());\n//   } else {\n//     // is node\n//     var node = ele;\n//     if (false) {\n//       ele = getGraph.finalCyto.$id(ele.id())\n//     }\n//     familyEles = familyEles\n//       .add(node)\n//       .add(ele.successors())\n//       .add(ele.predecessors());\n//   }\n//   if (addExtraLayer) {\n//     var familyNodes = familyEles.nodes();\n//     familyEles = familyEles\n//       .add(familyNodes.incomers())\n//       .add(familyNodes.outgoers());\n//   }\n//   return familyEles;\n// }\n\nlet onMouseOver = function(cyto: CytoscapeType) {\n  return function(evt: CytoEvent) {\n    let target = evt.target;\n    if (target === cyto) return;\n\n    // highlight all outgoer's outgoers and all incomer's incomers and self\n\n    let hasCalled = false;\n    let debounced = _debounce(function() {\n      hasCalled = true;\n      updateGraph.hoverData(target.data());\n    }, 200);\n    debounced();\n\n    // if a mouseout occurs before the function is executed, cancel it\n    // works as mouseout is always called before mouseover\n    target.once(\"mouseout\", function(evtOut) {\n      debounced.cancel();\n      if (hasCalled) {\n        // only remove hover if hover added\n        updateGraph.hoverDataReset();\n      }\n    });\n  };\n};\n\nlet onClick = function(cyto: CytoscapeType) {\n  let cytoClickedBefore, cytoClickedTimeout;\n\n  return function(evt: CytoEvent) {\n    // remove focus on search\n    $(\"#search\").blur();\n\n    let target = evt.target;\n\n    // check for double click\n    // https://stackoverflow.com/a/44160927\n    if (cytoClickedTimeout && cytoClickedBefore) {\n      clearTimeout(cytoClickedTimeout);\n    }\n\n    if (cytoClickedBefore === target) {\n      // is actually a double click... return!\n      target.trigger(\"dblclick\", evt);\n      cytoClickedBefore = null;\n      return;\n    } else {\n      cytoClickedTimeout = setTimeout(function() {\n        cytoClickedBefore = null;\n      }, 400);\n      cytoClickedBefore = target;\n      // continue like regular click\n      // console.log(\"click!!\", evt);\n    }\n\n    if (target === rlog.cyto) {\n      // remove sticky focus class\n      updateGraph.stickyDatasReset();\n      return;\n    }\n\n    updateGraph.stickyDatas([target.data()]);\n    return;\n  };\n};\n\nlet onDblClick = function(cyto: CytoscapeType) {\n  return function(evt: CytoEvent) {\n    //, originalEvt: Event) {\n    // console.log(\"dbl click!!\");\n    // console.log(\"dbl click!!\", evt, originalEvt);\n    let target = evt.target;\n\n    if (target === rlog.cyto) {\n      // go back to full graph\n      updateGraph.resetHoverStickyFilterData();\n      return;\n    }\n\n    // var holdingShiftKey = originalEvt.originalEvent.shiftKey;\n    // if (holdingShiftKey) {\n    //   console.log(\"extra layers!\")\n    //   var familyEles = cytoFamilySuccPred(target, true);\n    //   var familyDatas = elesData(familyEles)\n    //\n    //   var directFamilyEles = cytoFamilySuccPred(target, false);\n    //   getGraph.updateHoverInfo(\n    //     elesData(directFamilyEles),\n    //     elesData(cyto.$().not(directFamilyEles))\n    //   )\n    //\n    //   updateGraph.withDatas(familyDatas)\n    //\n    // } else {\n    // var familyEles = cytoFamilySuccPred(target, false);\n    // var familyDatas = elesData(familyEles)\n\n    updateGraph.searchRegexReset();\n    updateGraph.searchStringWithData(target.data());\n    // updateGraph.filterDatas([target.data()]);\n  };\n};\n\nlet addOnMethods = function(cyto: CytoscapeType) {\n  cyto.on(\"mouseover\", onMouseOver(cyto));\n\n  cyto.on(\"click\", onClick(cyto));\n\n  cyto.on(\"dblclick\", onDblClick(cyto));\n};\n\nexport { onMouseOver, onClick, onDblClick, addOnMethods };\nexport default addOnMethods;\n","// @flow\n\nimport colors from \"../style/colors\";\n\nlet styleHelper = function(selector: string, style: Object) {\n  return {\n    selector: selector,\n    style: style,\n  };\n};\n\nlet nodeShapes = {\n  start: {\n    shape: \"-1 1 0.33333333333 1 1 0 0.33333333333 -1 -1 -1\",\n    width: 50 * 0.75,\n    height: 30,\n  },\n  middle: {\n    shape: \"-1 1 0.5 1 1 0 0.5 -1 -1 -1 -0.5 0\",\n    width: 50,\n    height: 30,\n  },\n  end: {\n    shape: \"-1 1 1 1 1 -1 -1 -1 -0.33333333333 0\",\n    width: 50 * 0.75,\n    height: 30,\n  },\n};\n\nlet pulseScale = 1 + 1 / 16;\nlet selectedScale = 2;\n\nlet edgePixelWidth = 4;\n\nlet labelWidth = 350;\nlet maxTextWidth = \"800px\";\n\nlet graphStyles = {\n  node: {\n    default: {\n      \"z-index\": 0,\n      label: \"data(cytoLabelShort_)\",\n      color: colors.nodes.label_text_color,\n      \"text-opacity\": colors.nodes.label_text_opacity,\n      \"text-valign\": \"bottom\",\n      // \"text-margin-x\": \"-5\",\n      // \"text-margin-y\": \"-5\",\n      \"text-halign\": \"right\",\n      \"border-color\": colors.regular.black,\n      \"border-style\": \"solid\",\n      \"border-width\": 1,\n      \"background-color\": colors.nodes.ready,\n      \"text-wrap\": \"ellipsis\",\n      \"text-max-width\": `${labelWidth}px`,\n      \"text-background-color\": colors.nodes.label_background_color,\n      \"text-background-opacity\": colors.nodes.label_background_opacity,\n      \"font-family\": '\"Fira Mono\", monospace',\n    },\n    start: {\n      shape: \"polygon\",\n      \"shape-polygon-points\": nodeShapes.start.shape,\n      width: nodeShapes.start.width,\n      height: nodeShapes.start.height,\n    },\n    startBig: {\n      \"border-width\": 2,\n      width: nodeShapes.start.width * pulseScale,\n      height: nodeShapes.start.height * pulseScale,\n    },\n    middle: {\n      shape: \"polygon\",\n      \"shape-polygon-points\": nodeShapes.middle.shape,\n      width: nodeShapes.middle.width,\n      height: nodeShapes.middle.height,\n    },\n    middleBig: {\n      \"border-width\": 2,\n      width: nodeShapes.middle.width * pulseScale,\n      height: nodeShapes.middle.height * pulseScale,\n    },\n    end: {\n      shape: \"polygon\",\n      \"shape-polygon-points\": nodeShapes.end.shape,\n      width: nodeShapes.end.width,\n      height: nodeShapes.end.height,\n      \"text-max-width\": `${labelWidth * 1.5}px`,\n    },\n    endBig: {\n      \"border-width\": 2,\n      width: nodeShapes.end.width * pulseScale,\n      height: nodeShapes.end.height * pulseScale,\n    },\n    enter: {\n      // \"border-width\": 2,\n      \"background-color\": colors.nodes.calculating,\n    },\n    enterActive: {\n      \"background-color\": colors.nodes.calculating,\n      \"border-width\": 2.5,\n    },\n    invalidate: {\n      // \"border-width\": 2,\n      \"background-color\": colors.nodes.invalidating,\n    },\n    invalidateActive: {\n      \"background-color\": colors.nodes.invalidating,\n      \"border-width\": 2.5,\n    },\n    invalidateDone: {\n      \"background-color\": colors.nodes.invalidated,\n    },\n    isolate: {\n      \"border-style\": \"dashed\",\n      // \"border-width\": 3,\n      // \"border-opacity\"\n    },\n    isolateInvalidate: {\n      \"border-style\": \"dashed\",\n      \"border-color\": \"darkgrey\",\n      \"border-width\": 3,\n      // \"border-opacity\"\n    },\n    valueChanged: {\n      // \"background-color\": colors.regular.red,\n      \"background-color\": colors.nodes.invalidating,\n      // \"border-style\": \"dashed\",\n      // \"border-color\": \"darkgrey\",\n      // \"border-width\": 3,\n      // \"border-opacity\"\n    },\n    frozen: {\n      \"background-color\": colors.frozen.default,\n    },\n  },\n  edge: {\n    default: {\n      \"curve-style\": \"bezier\",\n      width: edgePixelWidth,\n      \"target-arrow-shape\": \"triangle\",\n      \"mid-target-arrow-shape\": \"triangle\",\n      \"line-color\": colors.edges.running, //\"#9dbaea\",\n      \"mid-target-arrow-color\": colors.edges.running,\n      \"target-arrow-color\": colors.edges.running,\n    },\n    isolate: {\n      width: edgePixelWidth,\n      \"line-color\": colors.edges.isolate,\n      \"mid-target-arrow-color\": colors.edges.isolate,\n      \"target-arrow-color\": colors.edges.isolate,\n      \"line-style\": \"dashed\",\n    },\n  },\n  ghostEdge: {\n    default: {\n      width: 1,\n      \"mid-target-arrow-shape\": \"triangle\",\n      \"mid-target-arrow-color\": colors.ghostEdges.default,\n      \"arrow-scale\": 0.25,\n      \"curve-style\": \"haystack\",\n      \"line-color\": colors.ghostEdges.default,\n      \"line-style\": \"dotted\",\n    },\n    hoverNotFocusedButSticky: {\n      \"line-color\": colors.regular.grey2,\n      \"mid-target-arrow-color\": colors.regular.grey2,\n    },\n    hoverNotFocused: {\n      \"line-color\": colors.regular.grey2,\n      \"mid-target-arrow-color\": colors.regular.grey2,\n    },\n  },\n  focus: {\n    hoverNotFocused: {\n      \"background-blacken\": -0.75,\n      \"border-color\": colors.regular.grey2,\n      \"line-color\": colors.regular.grey2,\n      \"mid-target-arrow-color\": colors.regular.grey2,\n      \"target-arrow-color\": colors.regular.grey2,\n    },\n    hoverNotFocusedButSticky: {\n      \"background-blacken\": -0.35,\n      \"border-color\": colors.regular.grey2,\n      \"line-color\": colors.regular.grey2,\n      \"mid-target-arrow-color\": colors.regular.grey2,\n      \"target-arrow-color\": colors.regular.grey2,\n    },\n    stickyNotFocused: {\n      \"background-blacken\": -0.75,\n      \"border-color\": colors.regular.grey2,\n      \"line-color\": colors.regular.grey2,\n      \"mid-target-arrow-color\": colors.regular.grey2,\n      \"target-arrow-color\": colors.regular.grey2,\n    },\n  },\n  selected: {\n    node: {\n      \"border-width\": 4,\n      // if you hover / selected, show all the label\n      \"text-max-width\": maxTextWidth,\n      \"text-wrap\": \"wrap\",\n      \"background-opacity\": 1,\n      \"text-background-opacity\": 1,\n      \"text-border-opacity\": 1,\n      \"text-border-width\": 1,\n      \"text-border-style\": \"solid\",\n      \"text-border-color\": colors.regular.black,\n      \"text-background-padding\": 8 * 2,\n      label: \"data(cytoLabel_)\",\n      \"z-index\": 1000,\n    },\n    edge: {\n      width: edgePixelWidth * 2,\n    },\n    ghostEdge: {\n      width: edgePixelWidth * 2,\n      \"arrow-scale\": 2 / 3,\n    },\n  },\n  filtered: {\n    node: {\n      \"border-width\": 3,\n      \"font-size\": \"30\",\n    },\n    start: {\n      width: nodeShapes.start.width * selectedScale,\n      height: nodeShapes.start.height * selectedScale,\n    },\n    middle: {\n      width: nodeShapes.middle.width * selectedScale,\n      height: nodeShapes.middle.height * selectedScale,\n    },\n    end: {\n      width: nodeShapes.end.width * selectedScale,\n      height: nodeShapes.end.height * selectedScale,\n    },\n  },\n  hidden: {\n    node: {\n      // visibility: \"hidden\",\n      \"background-color\": \"white\",\n      \"background-opacity\": 1,\n      \"border-opacity\": 0.5,\n      \"text-opacity\": 0.5,\n      label: \"data(label)\", // do not display a value and only the raw label\n    },\n    edge: {\n      // visibility: \"hidden\",\n      opacity: 0.5,\n    },\n  },\n};\n\nexport { graphStyles, styleHelper as style, labelWidth };\n\nexport default graphStyles;\n","// @flow\n\nimport cytoscape from \"cytoscape\"; // flowlint-line untyped-import:off\n\nimport * as cytoOn from \"./cytoOn\";\nimport graphStyles, { style } from \"./cytoStyle\";\nimport layoutOptions from \"./layoutOptions\";\n\n// // TODO-barret use cytoClasses\nimport cytoClasses from \"./cytoClasses\";\n\nlet withContainer = function(container: JQuery) {\n  let cyto = cytoscape({\n    container: container,\n    boxSelectionEnabled: false,\n    autounselectify: true,\n    layout: layoutOptions,\n    wheelSensitivity: 0.04,\n    // minZoom: 0.5,\n    // maxZoom: 1.5,\n    style: [\n      // order of the style definitions are how styles are applied\n      style(cytoClasses.node, graphStyles.node.default),\n      style(cytoClasses.edge, graphStyles.edge.default),\n      style(cytoClasses.edgeGhost, graphStyles.ghostEdge.default),\n      style(cytoClasses.edgeIsolate, graphStyles.edge.isolate),\n      style(cytoClasses.nodeStart, graphStyles.node.start),\n      style(cytoClasses.nodeMiddle, graphStyles.node.middle),\n      style(cytoClasses.nodeEnd, graphStyles.node.end),\n      style(cytoClasses.nodeStartBig, graphStyles.node.startBig),\n      style(cytoClasses.nodeMiddleBig, graphStyles.node.middleBig),\n      style(cytoClasses.nodeEndBig, graphStyles.node.endBig),\n      style(cytoClasses.nodeEnter, graphStyles.node.enter),\n      style(cytoClasses.nodeEnterActive, graphStyles.node.enterActive),\n      style(cytoClasses.nodeInvalidate, graphStyles.node.invalidate),\n      style(\n        cytoClasses.nodeInvalidateActive,\n        graphStyles.node.invalidateActive\n      ),\n      style(cytoClasses.nodeInvalidateDone, graphStyles.node.invalidateDone),\n      style(cytoClasses.nodeIsolate, graphStyles.node.isolate),\n      style(\n        cytoClasses.nodeIsolateInvalidate,\n        graphStyles.node.isolateInvalidate\n      ),\n      style(cytoClasses.nodeValueChanged, graphStyles.node.valueChanged),\n      style(cytoClasses.hoverNotFocused, graphStyles.focus.hoverNotFocused),\n      style(\n        cytoClasses.hoverNotFocusedButSticky,\n        graphStyles.focus.hoverNotFocusedButSticky\n      ),\n      style(\n        cytoClasses.edgeGhostHoverNotFocused,\n        graphStyles.ghostEdge.hoverNotFocused\n      ),\n      style(\n        cytoClasses.edgeGhostHoverNotFocusedButSticky,\n        graphStyles.ghostEdge.hoverNotFocusedButSticky\n      ),\n      style(cytoClasses.stickyNotFocused, graphStyles.focus.stickyNotFocused),\n      style(cytoClasses.nodeFiltered, graphStyles.filtered.node),\n      style(cytoClasses.nodeFilteredStart, graphStyles.filtered.start),\n      style(cytoClasses.nodeFilteredMiddle, graphStyles.filtered.middle),\n      style(cytoClasses.nodeFilteredEnd, graphStyles.filtered.end),\n      style(cytoClasses.nodeSelected, graphStyles.selected.node),\n      style(cytoClasses.edgeSelected, graphStyles.selected.edge),\n      style(cytoClasses.edgeGhostSelected, graphStyles.selected.ghostEdge),\n      style(cytoClasses.nodeFrozen, graphStyles.node.frozen),\n      style(cytoClasses.nodeHidden, graphStyles.hidden.node),\n      style(cytoClasses.edgeHidden, graphStyles.hidden.edge),\n    ],\n  });\n\n  cytoOn.addOnMethods(cyto);\n\n  return cyto;\n};\n\nexport { withContainer };\nexport default withContainer;\n","// @flow\n\nimport cytoscape from \"cytoscape\"; // flowlint-line untyped-import:off\nimport dagre from \"cytoscape-dagre\"; // flowlint-line untyped-import:off\n\nimport { labelWidth } from \"./cytoStyle\";\n\nimport type { CytoscapeElement, CytoscapeLibrary } from \"./cytoFlowType\";\n\n(cytoscape: CytoscapeLibrary).use(dagre);\n\nlet layoutOptions = {\n  // whether to fit to viewport\n  //   do not want to fit to viewport as user may have zoomed/panned\n  fit: false,\n\n  name: \"dagre\",\n  rankDir: \"LR\", // 'TB' for top to bottom flow, 'LR' for left to right,\n  rankSep: labelWidth + 50, // the separation between node columns\n  nodeSep: 10, // vertical separation of nodes\n  edgeSep: 50, // the separation between adjacent edges in the same rank\n  ranker: \"longest-path\", // Type of algorithm to assign a rank to each node in the input graph. Possible values: \"network-simplex\", \"tight-tree\" or \"longest-path\"\n  padding: 30, // fit padding\n  spacingFactor: 1, // Applies a multiplicative factor (>0) to expand or compress the overall area that the nodes take up\n  nodeDimensionsIncludeLabels: false, // whether labels should be included in determining the space used by a node\n  animate: true, // whether to transition the node positions\n  animateFilter: function(node: CytoscapeElement, i: number) {\n    return true;\n  }, // whether to animate specific nodes when animation is on; non-animated nodes immediately go to their final positions\n  animationDuration: 1000, // duration of animation in ms if enabled\n  animationEasing: \"ease-in-out-quad\", // easing of animation if enabled\n};\n\nexport default layoutOptions;\n","// @flow\n\nconst stateOff = \"off\";\nconst stateOn = \"on\";\nconst stateFinished = \"finished\";\n\ntype stateEnum = \"off\" | \"on\" | \"finished\";\n\n// pulse on being active at step k; isAtStep(k)\n// display engaged; isOn\n// display active engaged; isOn and isActive\n// display finished; isFinished\n// display none; isOff\nclass ActiveStateStatus {\n  state: stateEnum;\n  activeStep: number;\n\n  constructor(data: ActiveStateStatus | null = null) {\n    if (data instanceof ActiveStateStatus) {\n      this.state = data.state;\n      this.activeStep = data.activeStep;\n    } else {\n      this.state = stateOff; // \"on\", \"finished\", \"off\"\n      this.activeStep = -1;\n    }\n  }\n  setState(state: stateEnum) {\n    this.state = state;\n  }\n  setActiveAtStep(step: number) {\n    this.toOn();\n    this.activeStep = step;\n  }\n  reset() {\n    this.toOff();\n    this.resetActive();\n  }\n  resetActive() {\n    this.activeStep = -1;\n  }\n  get isOn() {\n    return this.state === stateOn;\n  }\n  get isOff() {\n    return this.state === stateOff;\n  }\n  get isFinished() {\n    return this.state === stateFinished;\n  }\n  get isActive() {\n    return this.isOn && this.activeStep > 0;\n  }\n  isActiveAtStep(k: number) {\n    return this.isActive && this.activeStep === k;\n  }\n\n  toOn() {\n    this.state = stateOn;\n  }\n  toFinished() {\n    this.state = stateFinished;\n  }\n  toOff() {\n    this.state = stateOff;\n  }\n}\n\nexport { ActiveStateStatus };\n","// @flow\n\nimport _isNil from \"lodash/isNil\";\n\nimport { HoverStatus } from \"./HoverStatus\";\n\nimport type { ReactIdType, CtxIdType } from \"../log/logStates\";\n\nlet ghostKey = function(reactId: ReactIdType, depOnReactId: ReactIdType) {\n  return `${reactId} depends on ${depOnReactId}`;\n};\nlet edgeKey = function(\n  reactId: ReactIdType,\n  depOnReactId: ReactIdType,\n  ctxId: CtxIdType\n) {\n  return `${reactId} depends on ${depOnReactId} in ${ctxId}`;\n};\n\nclass Edge {\n  reactId: ReactIdType;\n  depOnReactId: ReactIdType;\n  ctxId: CtxIdType;\n  session: string;\n  time: number;\n  status: string;\n  isGhost: boolean;\n  hoverStatus: HoverStatus;\n  isDisplayed: boolean;\n\n  constructor(data: Edge | EdgeInputType) {\n    if (typeof data.reactId === \"undefined\")\n      throw \"data.reactId not provided to new Edge()\";\n    if (typeof data.depOnReactId === \"undefined\")\n      throw \"data.depOnReactId not provided to new Edge()\";\n    if (typeof data.ctxId === \"undefined\")\n      throw \"data.ctxId not provided to new Edge()\";\n    if (typeof data.time === \"undefined\")\n      throw \"data.time not provided to new Edge()\";\n    this.reactId = data.reactId;\n    this.depOnReactId = data.depOnReactId;\n    this.ctxId = data.ctxId;\n    this.session = _isNil(data.session) ? \"Global\" : data.session;\n    this.time = data.time;\n    this.status = _isNil(data.status) ? \"normal\" : data.status;\n    this.isGhost = _isNil(data.isGhost) ? false : data.isGhost;\n    this.hoverStatus = new HoverStatus(data.hoverStatus);\n    this.isDisplayed = _isNil(data.isDisplayed) ? true : data.isDisplayed;\n  }\n  get id(): EdgeIdType {\n    return `${this.reactId}_${this.depOnReactId}_${this.ctxId}`.replace(\n      /\\$/g,\n      \"_\"\n    );\n  }\n  get source(): GraphNodeKeyType {\n    return this.depOnReactId.replace(/\\$/g, \"_\");\n  }\n  get target(): GraphNodeKeyType {\n    return this.reactId.replace(/\\$/g, \"_\");\n  }\n  get key(): EdgeKeyType {\n    return edgeKey(this.reactId, this.depOnReactId, this.ctxId);\n  }\n  get ghostKey(): EdgeKeyType {\n    return ghostKey(this.reactId, this.depOnReactId);\n  }\n  get hoverKey(): EdgeHoverKeyType {\n    return this.ghostKey;\n  }\n  get inIsolate(): boolean {\n    return this.status === \"isolate\";\n  }\n  get cytoStyle(): Object {\n    return {};\n  }\n  get cytoClasses(): string {\n    let classes = [];\n    if (this.inIsolate) classes.push(\"edgeIsolate\");\n    switch (this.hoverStatus.state) {\n      case HoverStatus.valFocused:\n        break;\n      case HoverStatus.valNotFocused:\n        if (this.hoverStatus.sticky) {\n          classes.push(\"hoverNotFocusedButSticky\");\n        } else {\n          classes.push(\"hoverNotFocused\");\n        }\n        break;\n    }\n    if (this.hoverStatus.selected) classes.push(\"edgeSelected\");\n    if (!this.isDisplayed) classes.push(\"edgeHidden\");\n    return classes.join(\" \");\n  }\n  get cytoData() {\n    let retData = this;\n    return {\n      group: \"edges\",\n      data: retData,\n    };\n  }\n}\n\ntype EdgeKeyType = string;\ntype EdgeHoverKeyType = string;\ntype EdgeIdType = string;\n\ntype GraphNodeKeyType = string;\n\ntype EdgeInputType = EdgeLikeType & {\n  ctxId: CtxIdType,\n};\n\ntype EdgeLikeType = {\n  reactId: ReactIdType,\n  depOnReactId: ReactIdType,\n  session: ?string,\n  time: number,\n  hoverStatus?: ?HoverStatus,\n  isDisplayed?: boolean,\n  status?: string,\n  isGhost?: boolean,\n};\n\nexport { Edge, edgeKey, ghostKey };\n\nexport type {\n  EdgeLikeType,\n  EdgeIdType,\n  EdgeKeyType,\n  EdgeHoverKeyType,\n  GraphNodeKeyType,\n};\n","// @flow\n\nimport _isNil from \"lodash/isNil\";\n\nimport type {\n  EdgeLikeType,\n  EdgeIdType,\n  EdgeHoverKeyType,\n  EdgeKeyType,\n  GraphNodeKeyType,\n} from \"./Edge\";\nimport { HoverStatus } from \"./HoverStatus\";\n\nclass GhostEdge {\n  reactId: string;\n  depOnReactId: string;\n  time: number;\n  hoverStatus: HoverStatus;\n  isGhost: boolean;\n  session: string;\n  isDisplayed: boolean;\n\n  constructor(data: GhostEdge | EdgeLikeType) {\n    if (typeof data.reactId === \"undefined\")\n      throw \"data.reactId not provided to new GhostEdge()\";\n    if (typeof data.depOnReactId === \"undefined\")\n      throw \"data.depOnReactId not provided to new GhostEdge()\";\n    if (typeof data.time === \"undefined\")\n      throw \"data.time not provided to new GhostEdge()\";\n    this.reactId = data.reactId;\n    this.depOnReactId = data.depOnReactId;\n    this.session = _isNil(data.session) ? \"Global\" : data.session;\n    this.time = data.time;\n    this.isGhost = _isNil(data.isGhost) ? true : data.isGhost;\n    this.hoverStatus = new HoverStatus(data.hoverStatus);\n    this.isDisplayed = _isNil(data.isDisplayed) ? true : data.isDisplayed;\n  }\n  get id(): EdgeIdType {\n    return `${this.reactId}_${this.depOnReactId}`.replace(/\\$/g, \"_\");\n  }\n  get source(): GraphNodeKeyType {\n    return this.depOnReactId.replace(/\\$/g, \"_\");\n  }\n  get target(): GraphNodeKeyType {\n    return this.reactId.replace(/\\$/g, \"_\");\n  }\n  get key(): EdgeKeyType {\n    return `${this.reactId} depends on ${this.depOnReactId}`;\n  }\n  get hoverKey(): EdgeHoverKeyType {\n    return this.key;\n  }\n  get cytoStyle() {\n    return {};\n    // return graphStyles.ghostEdge.default\n  }\n  get cytoClasses(): string {\n    let classes = [\"edgeGhost\"];\n    switch (this.hoverStatus.state) {\n      case HoverStatus.valFocused:\n        break;\n      case HoverStatus.valNotFocused:\n        if (this.hoverStatus.sticky) {\n          classes.push(\"edgeGhostHoverNotFocusedButSticky\");\n        } else {\n          classes.push(\"edgeGhostHoverNotFocused\");\n        }\n        break;\n    }\n    if (this.hoverStatus.selected) classes.push(\"edgeGhostSelected\");\n    if (!this.isDisplayed) classes.push(\"edgeHidden\");\n    return classes.join(\" \");\n  }\n  get cytoData() {\n    let retData = this;\n    return {\n      group: \"edges\",\n      data: retData,\n    };\n  }\n}\n\nexport { GhostEdge };\n","// @flow\n\nimport _clone from \"lodash/clone\";\nimport _some from \"lodash/some\";\nimport _filter from \"lodash/filter\";\nimport _isNil from \"lodash/isNil\";\nimport _union from \"lodash/union\";\nimport _last from \"lodash/last\";\nimport cytoscape from \"cytoscape\"; // flowlint-line untyped-import:off\n\nimport { mapValues } from \"../utils/MapHelper\";\nimport { LogStates } from \"../log/logStates\";\nimport { Node } from \"./Node\";\nimport { Edge } from \"./Edge\";\nimport { GhostEdge } from \"./GhostEdge\";\nimport { HoverStatus } from \"./HoverStatus\";\nimport { expectPrevStatus } from \"./StatusArr\";\n\nimport { flatMap } from \"../utils/ArrayHelper\";\nimport console from \"../utils/console\";\n\nimport type { CytoscapeType } from \"../cyto/cytoFlowType\";\n\nimport type {\n  LogType,\n  LogEntryHasReactId,\n  ReactIdType,\n  LogEntryDefineType,\n  LogEntryInvalidateStartType,\n  LogEntryIsolateInvalidateStartType,\n  LogEntryIsolateEnterType,\n  LogEntryEnterType,\n  LogEntryDependsOnType,\n  LogEntryDependsOnRemoveType,\n  LogEntryExitType,\n  LogEntryIsolateExitType,\n  LogEntryInvalidateEndType,\n  LogEntryIsolateInvalidateEndType,\n} from \"../log/logStates\";\nimport type { NodeIdType } from \"./Node\";\nimport type { EdgeIdType } from \"./Edge\";\n\ntype SomeGraphData = Node | Edge | GhostEdge;\n\nclass Graph {\n  log: LogType;\n  nodes: Map<NodeIdType, Node>;\n  edges: Map<EdgeIdType, Edge>;\n  edgesUnique: Map<EdgeIdType, GhostEdge>;\n  activeNodeEnter: Array<ReactIdType>;\n  activeInvalidateEnter: Array<ReactIdType>;\n\n  constructor(data: Graph | LogType) {\n    this.log = data instanceof Graph ? data.log : data;\n    this.nodes = new Map();\n    this.edges = new Map();\n    this.edgesUnique = new Map();\n    this.activeNodeEnter = [];\n    this.activeInvalidateEnter = [];\n    if (data instanceof Graph) {\n      let priorGraph = data;\n      priorGraph.nodes.forEach((node, key) =>\n        this.nodes.set(key, new Node(node))\n      );\n      priorGraph.edges.forEach((edge, key) =>\n        this.edges.set(key, new Edge(edge))\n      );\n      priorGraph.edgesUnique.forEach((edge, key) =>\n        this.edgesUnique.set(key, new GhostEdge(edge))\n      );\n      this.activeNodeEnter = _clone(priorGraph.activeNodeEnter);\n      this.activeInvalidateEnter = _clone(priorGraph.activeInvalidateEnter);\n    }\n  }\n\n  get cytoGraph() {\n    let nodes = mapValues(this.nodes).map(item => item.cytoData);\n\n    let ghostEdgeMap = new Map(this.edgesUnique.entries());\n    let edges = mapValues(this.edges).map((edge: Edge) => {\n      // remove matching unique/ghost edges\n      if (ghostEdgeMap.has(edge.ghostKey)) {\n        ghostEdgeMap.delete(edge.ghostKey);\n      }\n      return edge.cytoData;\n    });\n    let ghostEdges = mapValues(ghostEdgeMap).map(item => item.cytoData);\n\n    let cyto: CytoscapeType = cytoscape();\n\n    cyto.add(nodes);\n    cyto.add(edges);\n    cyto.add(ghostEdges);\n    return cyto;\n  }\n\n  hasNodeReactId(reactId: ReactIdType): boolean {\n    return this.nodes.has(reactId);\n  }\n\n  hasSomeData(data: SomeGraphData): boolean {\n    if (data instanceof Node) {\n      return this.nodes.has(data.key);\n    } else if (isEdgeLike(data)) {\n      if (data instanceof Edge) {\n        if (this.edgesUnique.has(data.ghostKey)) return true;\n      } else {\n        if (this.edgesUnique.has(data.key)) return true;\n      }\n\n      let reactId = data.reactId;\n      let depOnReactId = data.depOnReactId;\n      let hasMatchingEdge = function(edges) {\n        return _some(edges, function(edge) {\n          if (edge.reactId === reactId && edge.depOnReactId === depOnReactId) {\n            return true;\n          }\n          return false;\n        });\n      };\n      return (\n        hasMatchingEdge(mapValues(this.edges)) ||\n        hasMatchingEdge(mapValues(this.edgesUnique))\n      );\n    } else {\n      console.error(data);\n      throw \"unsupported data type\";\n    }\n  }\n\n  highlightSelected(data: ?SomeGraphData, hoverKey: \"selected\" | \"filtered\") {\n    if (!data) return;\n    let onFn = HoverStatus.onFn(hoverKey);\n    if (data instanceof Node) {\n      let node = this.nodes.get(data.key);\n      if (typeof node !== \"undefined\") {\n        onFn(node);\n        return;\n      }\n    } else if (isEdgeLike(data)) {\n      if (data instanceof Edge) {\n        let edge = this.edges.get(data.key);\n        if (typeof edge !== \"undefined\") {\n          onFn(edge);\n          return;\n        }\n      }\n\n      // highlight all the edges (and ghost edges) that have the same source and target\n      let reactId = data.reactId;\n      let depOnReactId = data.depOnReactId;\n      let selectMatchingEdges = function(edge) {\n        if (edge.reactId === reactId && edge.depOnReactId === depOnReactId) {\n          onFn(edge);\n        }\n      };\n      mapValues(this.edgesUnique).map(selectMatchingEdges);\n      mapValues(this.edges).map(selectMatchingEdges);\n      return;\n    }\n    return;\n  }\n\n  reactIdFromData(\n    data: SomeGraphData | ?ReactIdType,\n    getParentFromEdge: boolean = true\n  ): ReactIdType | null {\n    if (data === null) {\n      throw \"Graph.prototype.reactIdFromData(data) must submit non null data\";\n    }\n    if (typeof data === \"string\") {\n      return data;\n    } else if (data instanceof Node) {\n      return data.reactId;\n    } else if (isEdgeLike(data)) {\n      let node = getParentFromEdge\n        ? this.nodes.get(data.depOnReactId)\n        : this.nodes.get(data.reactId);\n      if (node) {\n        return node.reactId;\n      } else {\n        return null;\n      }\n    } else {\n      console.error(data);\n      throw \"unsupported data type. Can only 'reactId's of 'Node's, 'GhostEdge's, or 'Edge's or from a reactId\";\n    }\n  }\n\n  // return array of node 'reactId's\n  parentNodeIds(data: SomeGraphData | ?ReactIdType): Array<ReactIdType> {\n    if (data === null) {\n      throw \"Graph.prototype.parentNodeIds(data) must submit non null data\";\n    }\n    if (isEdgeLike(data)) {\n      // return edge source\n      return [data.reactId];\n    } else {\n      let reactId;\n      reactId = this.reactIdFromData(data, true);\n      if (_isNil(reactId)) return [];\n      return _filter(mapValues(this.edgesUnique), function(edge) {\n        // if the target is the reactId\n        return edge.reactId === reactId;\n      }).map(function(edge) {\n        // return the source\n        return edge.depOnReactId;\n      });\n    }\n  }\n  childrenNodeIds(data: SomeGraphData | ?ReactIdType): Array<ReactIdType> {\n    if (data === null) {\n      throw \"Graph.prototype.childrenNodeIds(data) must submit non null data\";\n    }\n    if (isEdgeLike(data)) {\n      // return edge target\n      return [data.depOnReactId];\n    } else {\n      let reactId = this.reactIdFromData(data, false);\n      if (_isNil(reactId)) return [];\n      return _filter(mapValues(this.edgesUnique), function(edge) {\n        // if the source is the reactId\n        return edge.depOnReactId === reactId;\n      }).map(function(edge) {\n        // return the target\n        return edge.reactId;\n      });\n    }\n  }\n\n  ancestorNodeIds(data: SomeGraphData | ReactIdType): Array<ReactIdType> {\n    let reactId = this.reactIdFromData(data, true);\n    if (_isNil(reactId)) {\n      return [];\n    } else {\n      let originalReactId = reactId;\n      let seenMap = new Set();\n      let reactIdArr = [reactId];\n      while (reactIdArr.length > 0) {\n        reactId = reactIdArr.pop();\n        if (!seenMap.has(reactId)) {\n          this.parentNodeIds(reactId).forEach(function(parentReactId) {\n            if (parentReactId) {\n              reactIdArr.push(parentReactId);\n            }\n          });\n          seenMap.add(reactId);\n        }\n      }\n      seenMap.delete(originalReactId);\n      return Array.from(seenMap).sort();\n    }\n  }\n  decendentNodeIds(data: SomeGraphData | ReactIdType): Array<ReactIdType> {\n    let reactId = this.reactIdFromData(data, false);\n    if (_isNil(reactId)) return [];\n    let originalReactId = reactId;\n    let seenMap = new Set();\n    let reactIdArr = [reactId];\n    while (reactIdArr.length > 0) {\n      reactId = reactIdArr.pop();\n      if (!seenMap.has(reactId)) {\n        reactIdArr = reactIdArr.concat(this.childrenNodeIds(reactId));\n        seenMap.add(reactId);\n      }\n    }\n    seenMap.delete(originalReactId);\n    return Array.from(seenMap).sort();\n  }\n\n  // all filtering can be done with only node reactIds\n  familyTreeNodeIds(data: SomeGraphData | ReactIdType): Array<ReactIdType> {\n    let ret = [];\n    let reactId;\n    if (isEdgeLike(data)) {\n      reactId = this.reactIdFromData(data, true);\n      if (!_isNil(reactId)) ret.push(reactId);\n      reactId = this.reactIdFromData(data, false);\n      if (!_isNil(reactId)) ret.push(reactId);\n    } else {\n      reactId = this.reactIdFromData(data);\n      if (!_isNil(reactId)) ret.push(reactId);\n    }\n    return _union(\n      (ret: Array<ReactIdType>),\n      this.ancestorNodeIds(data),\n      this.decendentNodeIds(data)\n    );\n  }\n\n  familyTreeNodeIdsForDatas(datas: Array<SomeGraphData>): Array<ReactIdType> {\n    let self = this;\n    return _union(\n      flatMap(datas, function(data) {\n        return self.familyTreeNodeIds(data);\n      })\n    );\n  }\n  decendentNodeIdsForDatas(datas: Array<SomeGraphData>): Array<ReactIdType> {\n    let self = this;\n    return _union(\n      flatMap(datas, function(data: SomeGraphData) {\n        return self.decendentNodeIds(data);\n      })\n    );\n  }\n  ancestorNodeIdsForDatas(datas: Array<SomeGraphData>): Array<ReactIdType> {\n    let self = this;\n    return _union(\n      flatMap(datas, function(data) {\n        return self.ancestorNodeIds(data);\n      })\n    );\n  }\n\n  hoverStatusOnNodeIds(\n    nodeIds: Array<ReactIdType>,\n    hoverKey: \"state\" | \"sticky\" | \"selected\" | \"filtered\"\n  ) {\n    let nodeSet = new Set(nodeIds);\n    let onFn = HoverStatus.onFn(hoverKey);\n    let offFn = HoverStatus.offFn(hoverKey);\n\n    // highlight nodes\n    mapValues(this.nodes).map(function(node) {\n      if (nodeSet.has(node.reactId)) {\n        onFn(node);\n      } else {\n        offFn(node);\n      }\n    });\n    // highlight edges\n    mapValues(this.edges).map(function(edge) {\n      if (nodeSet.has(edge.reactId) && nodeSet.has(edge.depOnReactId)) {\n        onFn(edge);\n      } else {\n        offFn(edge);\n      }\n    });\n    // highlight unique edges\n    mapValues(this.edgesUnique).map(function(edge) {\n      if (nodeSet.has(edge.reactId) && nodeSet.has(edge.depOnReactId)) {\n        onFn(edge);\n      } else {\n        offFn(edge);\n      }\n    });\n\n    return this;\n  }\n\n  filterGraphOnNodeIds(nodeIds: Array<ReactIdType>) {\n    let nodeSet = new Set(nodeIds);\n\n    // prune nodes\n    this.nodes.forEach((node, key) => {\n      if (!nodeSet.has(node.reactId)) {\n        this.nodes.delete(key);\n      }\n    });\n    // prune edges\n    this.edges.forEach((edge, key) => {\n      if (!(nodeSet.has(edge.reactId) && nodeSet.has(edge.depOnReactId))) {\n        this.edges.delete(key);\n      }\n    });\n    // prune unique edges\n    this.edgesUnique.forEach((edge, key) => {\n      if (!(nodeSet.has(edge.reactId) && nodeSet.has(edge.depOnReactId))) {\n        this.edgesUnique.delete(key);\n      }\n    });\n\n    return this;\n  }\n\n  addEntry(data: any) {\n    if (!_isNil(data.reactId)) {\n      if (data.reactId === \"rNoCtx\") {\n        return;\n      }\n    }\n    data = (data: LogEntryHasReactId);\n\n    let node, lastNodeId, edge;\n\n    switch (data.action) {\n      // {\"action\": \"define\", \"reactId\": \"r3\", \"label\": \"plotObj\", \"type\": \"observable\", \"session\": \"fa3c747a6121aec5baa682cc3970b811\", \"time\": 1524581676.5841},\n      case LogStates.define: {\n        let logEntry = (data: LogEntryDefineType);\n        this.nodes.set(data.reactId, new Node((logEntry: Object)));\n        break;\n      }\n\n      // {\"action\": \"updateNodeLabel\", \"nodeId\": \"1\", \"label\": \"input\", \"session\": null, \"time\": 1522955046.5537},\n      case LogStates.updateNodeLabel:\n        node = this.nodes.get(data.reactId);\n        if (node) {\n          node.label = data.label;\n        }\n        break;\n\n      case LogStates.valueChange:\n        node = this.nodes.get(data.reactId);\n        if (node) {\n          node.value = data.value;\n          node.valueChangedStatus.setActiveAtStep(data.step);\n        }\n        break;\n\n      case LogStates.invalidateStart: {\n        let logEntry = (data: LogEntryInvalidateStartType);\n        node = this.nodes.get(logEntry.reactId);\n        lastNodeId = _last(this.activeInvalidateEnter);\n        if (lastNodeId) {\n          let lastInvalidateNode = this.nodes.get(lastNodeId);\n          if (lastInvalidateNode) {\n            lastInvalidateNode.invalidateStatus.resetActive();\n          }\n        }\n        this.activeInvalidateEnter.push(logEntry.reactId);\n        if (node) {\n          switch (node.type) {\n            case \"observable\":\n            case \"observer\":\n              node.invalidateStatus.setActiveAtStep(logEntry.step);\n              break;\n          }\n          node.statusAdd((logEntry: Object));\n        }\n        break;\n      }\n      case LogStates.enter: {\n        let logEntry = (data: LogEntryEnterType);\n        lastNodeId = _last(this.activeNodeEnter);\n        if (lastNodeId) {\n          let lastNode = this.nodes.get(lastNodeId);\n          if (lastNode) {\n            lastNode.enterStatus.resetActive();\n          }\n        }\n        this.activeNodeEnter.push(logEntry.reactId);\n        node = this.nodes.get(logEntry.reactId);\n        if (node) {\n          node.enterStatus.setActiveAtStep(logEntry.step);\n          switch (node.type) {\n            case \"observer\":\n            case \"observable\":\n              node.invalidateStatus.reset();\n          }\n          node.statusAdd((logEntry: Object));\n        }\n        break;\n      }\n\n      case LogStates.isolateInvalidateStart:\n      case LogStates.isolateEnter: {\n        let logEntry = (data:\n          | LogEntryIsolateInvalidateStartType\n          | LogEntryIsolateEnterType);\n        node = this.nodes.get(logEntry.reactId);\n        if (node) {\n          node.statusAdd((logEntry: Object));\n        }\n        break;\n      }\n\n      case LogStates.invalidateEnd:\n      case LogStates.exit:\n      case LogStates.isolateExit:\n      case LogStates.isolateInvalidateEnd: {\n        node = this.nodes.get(data.reactId);\n        switch (data.action) {\n          case LogStates.exit: {\n            let activeEnterNode = this.nodes.get(_last(this.activeNodeEnter));\n            if (activeEnterNode) {\n              activeEnterNode.enterStatus.reset();\n            }\n            this.activeNodeEnter.pop();\n            lastNodeId = _last(this.activeNodeEnter);\n            if (lastNodeId) {\n              let curActiveNode = this.nodes.get(lastNodeId);\n              if (curActiveNode) {\n                curActiveNode.enterStatus.setActiveAtStep(data.step);\n              }\n            }\n            break;\n          }\n          case LogStates.invalidateEnd: {\n            // turn off the previously active node\n            let curActiveNode = this.nodes.get(\n              _last(this.activeInvalidateEnter)\n            );\n            if (curActiveNode) {\n              curActiveNode.invalidateStatus.resetActive();\n            }\n            this.activeInvalidateEnter.pop();\n            // if another invalidateStart node exists...\n            //   set the previous invalidateStart node to active\n            lastNodeId = _last(this.activeInvalidateEnter);\n            if (lastNodeId) {\n              let lastNode = this.nodes.get(lastNodeId);\n              if (lastNode) {\n                lastNode.invalidateStatus.setActiveAtStep(data.step);\n              }\n            }\n            if (node) {\n              node.invalidateStatus.toFinished();\n              if (node.valueChangedStatus.isOn) {\n                node.valueChangedStatus.reset();\n              }\n            }\n            break;\n          }\n          case LogStates.isolateInvalidateEnd:\n            if (node && node.valueChangedStatus.isOn) {\n              node.valueChangedStatus.reset();\n            }\n            break;\n        }\n        if (node) {\n          let prevData = node.statusLast();\n          let expectedAction;\n          switch (data.action) {\n            case LogStates.exit:\n              expectedAction = LogStates.enter;\n              break;\n            case LogStates.isolateExit:\n              expectedAction = LogStates.isolateEnter;\n              break;\n            case LogStates.invalidateEnd:\n              expectedAction = LogStates.invalidateStart;\n              break;\n            case LogStates.isolateInvalidateEnd:\n              expectedAction = LogStates.isolateInvalidateStart;\n              break;\n          }\n          if (expectedAction) {\n            let logEntry = (data:\n              | LogEntryExitType\n              | LogEntryIsolateExitType\n              | LogEntryInvalidateEndType\n              | LogEntryIsolateInvalidateEndType);\n            expectPrevStatus((logEntry: Object), prevData, expectedAction);\n            node.statusRemove((logEntry: Object));\n          }\n        }\n        break;\n      }\n\n      case LogStates.dependsOn: {\n        let logEntry = ((data: LogEntryDependsOnType): Object);\n        if (!logEntry.reactId) {\n          break;\n        }\n        edge = new Edge(logEntry);\n        let edgeKey = edge.key;\n\n        // store unique edges to always display a transparent dependency\n        if (!this.edgesUnique.has(edge.ghostKey)) {\n          this.edgesUnique.set(edge.ghostKey, new GhostEdge(logEntry));\n        }\n\n        if (this.edges.has(edgeKey)) {\n          edge = this.edges.get(edgeKey);\n        } else {\n          this.edges.set(edgeKey, edge);\n        }\n\n        if (edge) {\n          node = this.nodes.get(edge.reactId);\n          if (node && node.statusLast().action === LogStates.isolateEnter) {\n            edge.status = \"isolate\";\n          } else {\n            edge.status = \"normal\";\n          }\n        }\n        break;\n      }\n\n      case LogStates.dependsOnRemove: {\n        let logEntry = ((data: LogEntryDependsOnRemoveType): Object);\n        edge = new Edge(logEntry);\n        // remove the edge\n        this.edges.delete(edge.key);\n        break;\n      }\n\n      case LogStates.createContext:\n      case LogStates.idle:\n      case LogStates.asyncStart:\n      case LogStates.asyncStop:\n      case LogStates.userMark:\n        // do nothing\n        // this[data.action] = data.step;\n        break;\n\n      case LogStates.freeze:\n        node = this.nodes.get(data.reactId);\n        if (node) {\n          node.isFrozen = true;\n        }\n        break;\n      case LogStates.thaw:\n        node = this.nodes.get(data.reactId);\n        if (node) {\n          node.isFrozen = false;\n        }\n        break;\n\n      default:\n        console.error(\"unknown data.action: \", data.action, data);\n      // throw data;\n    }\n  }\n}\n\nfunction isEdgeLike(data: any): boolean %checks {\n  return data instanceof Edge || data instanceof GhostEdge;\n}\n\nexport { Graph };\nexport type { SomeGraphData };\n","// @flow\n\nimport $ from \"jquery\";\n\nimport _assign from \"lodash/assign\";\nimport _clone from \"lodash/clone\";\nimport _filter from \"lodash/filter\";\nimport _some from \"lodash/some\";\nimport _sortBy from \"lodash/sortBy\";\nimport _sortedIndex from \"lodash/sortedIndex\";\nimport _sortedIndexOf from \"lodash/sortedIndexOf\";\nimport _union from \"lodash/union\";\n\nimport console from \"../utils/console\";\n\nimport { mapValues } from \"../utils/MapHelper\";\nimport { LogStates } from \"../log/logStates\";\nimport { Graph } from \"./Graph\";\n\nimport layoutOptions from \"../cyto/layoutOptions\";\n\nimport { Node } from \"./Node\";\nimport { Edge } from \"./Edge\";\nimport { GhostEdge } from \"./GhostEdge\";\n\nimport type {\n  LogType,\n  LogEntryInvalidateStartType,\n  // LogEntryDefineType,\n  // ReactIdType,\n} from \"../log/logStates\";\nimport type { SomeGraphData } from \"./Graph\";\nimport type {\n  CytoscapeElement,\n  CytoscapeType,\n  CytoscapeNode,\n  CytoscapeEdge,\n} from \"../cyto/cytoFlowType\";\n\nimport type { CytoscapeOptions } from \"../cyto/cytoFlowType\";\n\n// TODO-barret make filterDatas and hoverDatas sub modules of subsetDatas or something\n\nclass GraphAtStep {\n  log: LogType;\n  originalLog: LogType;\n\n  filterDatas: Array<SomeGraphData>;\n  hoverData: ?SomeGraphData;\n  stickyDatas: Array<SomeGraphData>;\n\n  finalFilteredGraph: Graph;\n  finalCompleteGraph: Graph;\n  finalCyto: any;\n\n  cytoLayout: any;\n\n  steps: Array<number>;\n  stepsVisible: Array<number>;\n  filteredStepsVisible: Array<number>;\n  stepsAsyncStart: Array<number>;\n  stepsAsyncStop: Array<number>;\n  stepsIdle: Array<number>;\n  stepsOutputCalc: Array<number>;\n  stepsUserMark: Array<number>;\n  minStep: number;\n  maxStep: number;\n\n  constructor(log: LogType) {\n    this.originalLog = log;\n\n    // hoverInfo[key] = `HoverStatus`\n    this.filterDatas = [];\n    this.hoverData = null;\n    this.stickyDatas = [];\n    // this.hoverDefault = \"focused\"\n    // this.hoverInfo = {} // use `hoverKey`\n\n    // this.filterMap = {};\n\n    this.log = log;\n    this.initStepInfo(log);\n\n    // make a graph with no filtering that is completly made\n    this.finalCompleteGraph = this.rawGraphAtStep(log.length);\n\n    this.updateFinalFilteredGraphAndStepsVisible();\n  }\n\n  updateFinalFilteredGraphAndStepsVisible(): void {\n    this.updateFinalFilteredGraph();\n    this.updateFilteredStepsVisible();\n    return;\n  }\n\n  // function hasFilterDatas(): boolean %checks {\n  //   return this.filterDatas ? this.filterDatas.length > 0 : false;\n  // }\n  // get hasStickyDatas() {\n  //   return this.stickyDatas ? this.stickyDatas.length > 0 : false;\n  // }\n  // get hasHoverData() {\n  //   return this.hoverData ? true : false;\n  // }\n\n  initStepInfo(log: LogType) {\n    this.steps = [];\n    this.stepsAsyncStart = [];\n    this.stepsAsyncStop = [];\n    this.stepsIdle = [];\n    this.stepsOutputCalc = [];\n    this.stepsUserMark = [];\n    this.minStep = log.length > 0 ? log[0].step : -1;\n    this.maxStep = log.length > 0 ? log[log.length - 1].step : -1;\n\n    let logItem, i;\n    let idleArr = [];\n    let startI = 0;\n    while (\n      log.length > startI + 2 &&\n      log[startI].action === LogStates.asyncStart &&\n      log[startI].session === null &&\n      log[startI + 1].action === LogStates.asyncStop &&\n      log[startI + 1].session === null &&\n      log[startI + 2].action === LogStates.idle &&\n      log[startI + 2].session === null\n    ) {\n      startI = startI + 3;\n    }\n    while (log.length > startI && log[startI].action === LogStates.idle) {\n      startI = startI + 1;\n    }\n    for (i = startI; i < log.length; i++) {\n      logItem = log[i];\n      switch (logItem.action) {\n        case LogStates.enter:\n          idleArr.push(i);\n          break;\n        case LogStates.exit:\n          idleArr.pop();\n          if (idleArr.length === 0) {\n            this.stepsOutputCalc.push(logItem.step);\n          }\n          break;\n        case LogStates.asyncStart:\n          this.stepsAsyncStart.push(logItem.step);\n          break;\n        case LogStates.asyncStop:\n          this.stepsAsyncStop.push(logItem.step);\n          break;\n        case LogStates.idle:\n          this.stepsIdle.push(logItem.step);\n          break;\n        case LogStates.userMark:\n          this.stepsUserMark.push(logItem.step);\n          break;\n      }\n\n      switch (logItem.action) {\n        case LogStates.invalidateStart: {\n          let logEntry = (logItem: LogEntryInvalidateStartType);\n          if (logEntry.type === \"other\") {\n            break;\n          }\n          if (log.length > i + 1 && i - 1 >= 0) {\n            let prevLogItem = log[i - 1];\n            let nextLogItem = log[i + 1];\n            if (\n              nextLogItem.action === LogStates.asyncStart &&\n              log.length > i + 2\n            ) {\n              nextLogItem = log[i + 2];\n            }\n            if (\n              nextLogItem.action === LogStates.invalidateEnd &&\n              prevLogItem.action === LogStates.define &&\n              logItem.reactId === prevLogItem.reactId &&\n              logItem.reactId === nextLogItem.reactId\n            ) {\n              // define X <-- keep\n              // invalidte start X <-- ignore!\n              // invalidate end X <-- already ignored\n              break;\n            }\n          }\n          // TODO-barret check if reactId is a reactive values. If so, skip, otherwise add\n          this.steps.push(logEntry.step);\n          break;\n        }\n        case LogStates.define:\n        // TODO-barret only for reactive values keys\n        case LogStates.invalidateEnd:\n        case LogStates.isolateInvalidateStart:\n        case LogStates.isolateInvalidateEnd:\n        // case \"isolateEnter\":\n        // case \"isolateExit\":\n        case LogStates.createContext:\n        case LogStates.asyncStart:\n        case LogStates.asyncStop:\n        case LogStates.idle:\n        case LogStates.userMark:\n          break;\n        default:\n          this.steps.push(logItem.step);\n          break;\n      }\n    }\n\n    this.stepsVisible =\n      // sort integer list\n      _sortBy(\n        // get union (unique values) of all visible locations\n        _union(this.steps, this.stepsUserMark, this.stepsIdle)\n      );\n  }\n\n  updateFilteredStepsVisible(): void {\n    if (!hasLength(this.filterDatas)) {\n      // no filtered data, so set to all visible steps\n      this.filteredStepsVisible = _clone(this.stepsVisible);\n      return;\n    }\n    // must have filtered data\n\n    let filteredStepsVisible = [];\n    let finalFilteredGraph = this.finalFilteredGraph;\n    let visibleStep, logEntry, i;\n\n    // todo must be actual log. not visible steps\n    for (i = 0; i < this.stepsVisible.length; i++) {\n      visibleStep = this.stepsVisible[i];\n      logEntry = this.log[visibleStep];\n\n      switch (logEntry.action) {\n        case LogStates.dependsOn:\n        case LogStates.dependsOnRemove:\n          // check for both to and from (since it must exist beforehand)\n          if (\n            finalFilteredGraph.hasNodeReactId(logEntry.reactId) &&\n            finalFilteredGraph.hasNodeReactId(logEntry.depOnReactId)\n          ) {\n            filteredStepsVisible.push(visibleStep);\n            break;\n          }\n          // not found\n          break;\n\n        case LogStates.define:\n        case LogStates.updateNodeLabel:\n        case LogStates.freeze:\n        case LogStates.thaw:\n        case LogStates.valueChange:\n        case LogStates.enter:\n        case LogStates.exit:\n        case LogStates.invalidateLater:\n        case LogStates.invalidateStart:\n        case LogStates.invalidateEnd:\n        case LogStates.isolateEnter:\n        case LogStates.isolateExit:\n        case LogStates.isolateInvalidateStart:\n        case LogStates.isolateInvalidateEnd:\n          if (!finalFilteredGraph.hasNodeReactId(logEntry.reactId)) {\n            // no node found in filtered graph\n            break;\n          }\n          filteredStepsVisible.push(visibleStep);\n          break;\n\n        case LogStates.idle:\n          if (filteredStepsVisible.length > 0) {\n            let priorFilteredStepVisible =\n              filteredStepsVisible[filteredStepsVisible.length - 1];\n            if (this.log[priorFilteredStepVisible].action !== LogStates.idle) {\n              // if the visible state is not an idle state, add it\n              filteredStepsVisible.push(visibleStep);\n            }\n          }\n          break;\n        case LogStates.userMark:\n          // always include (for now, multiple idle steps are removed later)\n          filteredStepsVisible.push(visibleStep);\n          break;\n\n        case LogStates.createContext:\n        case LogStates.asyncStart:\n        case LogStates.asyncStop:\n          // do not include\n          break;\n\n        default:\n          console.error(logEntry);\n          throw \"unknown logEntry action in 'next'\";\n      }\n    }\n\n    this.filteredStepsVisible = filteredStepsVisible;\n    return;\n  }\n\n  nextStep(k: number): number {\n    let idx = _sortedIndexOf(this.filteredStepsVisible, k);\n    if (idx >= 0) {\n      // go to the next step location\n      idx += 1;\n    } else {\n      // doesn't exist... so go to next closes step\n      idx = _sortedIndex(this.filteredStepsVisible, k);\n    }\n    // else, does not exist, so it is directly there\n    if (idx >= this.filteredStepsVisible.length || idx < 0) return -1;\n    return this.filteredStepsVisible[idx];\n  }\n  prevStep(k: number): number {\n    let idx = _sortedIndex(this.filteredStepsVisible, k) - 1;\n    if (idx < 0 || idx >= this.filteredStepsVisible.length) return -1;\n    return this.filteredStepsVisible[idx];\n  }\n\n  // full graph at step without filtering\n  //  no cometic changes\n  rawGraphAtStep(k: number): Graph {\n    let kVal = Math.max(0, Math.min(k, this.log.length));\n    // if (kVal >= this.cacheStep) {\n    //   iStart = Math.floor((kVal - 1) / this.cacheStep) * this.cacheStep;\n    //   graph = _cloneDeep(this.graphCache[iStart])\n    // }\n    let i,\n      graph = new Graph(this.log);\n    for (i = 0; i < this.log.length && this.log[i].step <= kVal; i++) {\n      graph.addEntry(this.log[i]);\n    }\n    return graph;\n    // this.graphCache = {};\n    // this.cacheStep = 250;\n    // var tmpGraph = new Graph(log);\n    // for (i = 0; i < log.length; i++) {\n    //   tmpGraph.addEntry(log[i])\n    //   if ((i % this.cacheStep) == 0) {\n    //     this.graphCache[i] = _cloneDeep(tmpGraph)\n    //   }\n    // }\n  }\n\n  // update the filtering for the final graph. No cosmetics\n  updateFinalFilteredGraph(): void {\n    // copy final graph\n    let finalGraph = new Graph(this.finalCompleteGraph);\n\n    // if any filtering...\n    if (hasLength(this.filterDatas)) {\n      finalGraph.filterGraphOnNodeIds(\n        // graph.familyTreeNodeIdsForDatas(this.filterDatas)\n        this.finalCompleteGraph.familyTreeNodeIdsForDatas(this.filterDatas)\n      );\n    }\n\n    this.finalFilteredGraph = finalGraph;\n    return;\n  }\n  // graph at step with filtering\n  // include all cosmetic information\n  filteredGraphAtStep(k: number): Graph {\n    // get unfiltered graph at step k\n    let graph = this.rawGraphAtStep(k);\n\n    // if any hover...\n    if (this.hoverData && graph.hasSomeData(this.hoverData)) {\n      graph.hoverStatusOnNodeIds(\n        this.finalFilteredGraph.familyTreeNodeIds(this.hoverData),\n        \"state\"\n      );\n      graph.highlightSelected(this.hoverData, \"selected\");\n    }\n    // if any sticky...\n    if (hasLength(this.stickyDatas)) {\n      if (\n        _some(\n          this.stickyDatas.map(function(data) {\n            return graph.hasSomeData(data);\n          })\n        )\n      ) {\n        // at least some sticky data is visible\n        let stickyTree = this.finalFilteredGraph.familyTreeNodeIdsForDatas(\n          this.stickyDatas\n        );\n        graph.hoverStatusOnNodeIds(stickyTree, \"sticky\");\n        this.stickyDatas.map(function(data) {\n          graph.highlightSelected(data, \"selected\");\n        });\n        if (!this.hoverData) {\n          // if sticky data no hover data... make the sticky data hover!\n          graph.hoverStatusOnNodeIds(stickyTree, \"state\");\n        }\n      }\n    }\n\n    // if any filtering...\n    if (hasLength(this.filterDatas)) {\n      graph.filterGraphOnNodeIds(\n        // graph.familyTreeNodeIdsForDatas(this.filterDatas)\n        this.finalFilteredGraph.familyTreeNodeIdsForDatas(this.filterDatas)\n      );\n      // graph.hoverStatusOnNodeIds(this.filterDatas.map((x) => x.reactId), \"filtered\");\n      this.filterDatas.map(function(data) {\n        graph.highlightSelected(data, \"filtered\");\n      });\n    }\n\n    return graph;\n  }\n\n  // if some sticky items, set those to focused and everything else to not focused\n  // else set all to focused\n  resetHoverData() {\n    this.hoverData = null;\n    // if (this.stickyData) {\n    //   // some sticky values... bring them to focus\n    //   _mapValues(this.hoverInfo, function(hoverStatus, key){\n    //     if (hoverStatus.isSticky) {\n    //       hoverStatus.toFocused();\n    //     } else {\n    //       hoverStatus.toNotFocused();\n    //     }\n    //   })\n    //   this.hoverDefault = HoverStatus.notFocused;\n    // } else {\n    //   // no sticky values, bring everything to normal\n    //   _mapValues(this.hoverInfo, function(hoverStatus, key){\n    //     hoverStatus.toFocused();\n    //   })\n    //   this.hoverDefault = \"focused\";\n    // }\n    return true;\n  }\n\n  updateHoverData(data: SomeGraphData) {\n    this.hoverData = data;\n  }\n  updateHoverDataReset() {\n    this.hoverData = null;\n  }\n  updateStickyDatas(dataArr: Array<SomeGraphData>) {\n    this.stickyDatas = dataArr;\n  }\n  updateStickyDatasReset() {\n    this.stickyDatas = [];\n  }\n  updateFilterDatas(dataArr: Array<SomeGraphData>) {\n    this.filterDatas = dataArr;\n    this.updateFinalFilteredGraphAndStepsVisible();\n  }\n  updateFilterDatasReset() {\n    this.updateFilterDatas([]);\n  }\n  updateSearchRegex(regex: RegExp) {\n    // update filterDatas below\n\n    let matchedElements = _filter(\n      // (mapValues(graph.nodes): ArraySomeGraphData),\n      mapValues(this.finalCompleteGraph.nodes),\n      function(node: Node) {\n        return regex.test(node.label) || regex.test(node.key);\n      }\n    );\n    if (matchedElements.length === 0) {\n      matchedElements = _filter(\n        mapValues(this.finalCompleteGraph.edges),\n        function(edge: Edge) {\n          return regex.test(edge.ghostKey);\n        }\n      );\n    }\n    if (matchedElements.length === 0) {\n      matchedElements = _filter(\n        mapValues(this.finalCompleteGraph.edgesUnique),\n        function(edge: GhostEdge) {\n          return regex.test(edge.key);\n        }\n      );\n    }\n\n    if (matchedElements.length === 0) {\n      // no matches found\n      this.updateStickyDatasReset();\n      this.updateFilterDatasReset();\n    } else {\n      this.updateStickyDatas((matchedElements: Array<Object>));\n      this.updateFilterDatas(\n        // for some reason, an array of node does not work with an array of (node, edge, or ghostedge)\n        (matchedElements: Array<Object>)\n      );\n    }\n  }\n  updateSearchRegexReset() {\n    this.resetHoverStickyFilterSearch();\n  }\n  resetHoverStickyFilterSearch() {\n    this.hoverData = null;\n    this.stickyDatas = [];\n    this.filterDatas = [];\n    $(\"#search\").val(\"\");\n    this.updateFinalFilteredGraphAndStepsVisible();\n  }\n\n  // computes a graph containing all points and edges possible,\n  //   extending the original graph at step k\n  fullFilteredGraphAtStep(k: number) {\n    // get graph at step k and update the final graph obect\n    let graph = this.filteredGraphAtStep(k);\n    let finalGraph = this.finalFilteredGraph;\n\n    // add any points and edges that have not be defined yet\n    // do not include regular edges, only unique edges\n    // append all missing nodes\n    mapValues(finalGraph.nodes).map(function(fullNode) {\n      if (!graph.nodes.has(fullNode.key)) {\n        // stomps finalGraph node value, but currently not a consequence to worry about\n        fullNode.isDisplayed = false;\n        graph.nodes.set(fullNode.key, fullNode);\n      }\n    });\n    mapValues(finalGraph.edgesUnique).map(function(fullEdge) {\n      if (!graph.edgesUnique.has(fullEdge.key)) {\n        // stomps finalGraph edge value, but currently not a consequence to worry about\n        fullEdge.isDisplayed = false;\n        graph.edgesUnique.set(fullEdge.key, fullEdge);\n      }\n    });\n\n    return graph;\n  }\n\n  displayAtStep(\n    k: number,\n    cy: CytoscapeType,\n    cytoOptions?: CytoscapeOptions = {}\n  ) {\n    let graph = this.fullFilteredGraphAtStep(k);\n    cy.startBatch();\n\n    // let cytoDur = 0;\n    let cyNodes = cy.nodes();\n    let graphCyto = graph.cytoGraph;\n    let graphNodes = graphCyto.nodes();\n    let nodesLRB = cyNodes.diff(graphNodes);\n    // .removeStyle()\n\n    let onLayoutReady = [];\n    let someNodeHasNewLabel = false;\n\n    // enter visible nodes\n    nodesLRB.right.map(function(graphNode: CytoscapeElement) {\n      let graphNodeData = (graphNode.data(): Node);\n      cy.add(graphNode)\n        .data(\"cytoLabel_\", graphNodeData.cytoLabel)\n        .data(\"cytoLabelShort_\", graphNodeData.cytoLabelShort)\n        .classes(graphNodeData.cytoClasses)\n        .style(graphNodeData.cytoStyle);\n      // .animate({\n      //   // style: ,\n      //   duration: cytoDur\n      // });\n    });\n    // update visible nodes\n    nodesLRB.both.map(function(cytoNode: CytoscapeElement) {\n      let cyNode = (cy.$id(cytoNode.id()): CytoscapeNode);\n\n      let graphNode = (graphNodes.$id(cytoNode.id()): CytoscapeNode);\n      let graphNodeData = (graphNode.data(): Node);\n      let graphClasses = graphNodeData.cytoClasses;\n\n      switch (cyNode.data(\"type\")) {\n        case \"observer\":\n        case \"observable\":\n          break;\n        default:\n          if (cyNode.data(\"value\") !== graphNodeData.value) {\n            someNodeHasNewLabel = true;\n          }\n          break;\n      }\n\n      cyNode\n        // update to latest data\n        .data(graphNodeData)\n        // prolly due to how accessor methods are done, this data value must be placed manually\n        .data(\"value\", graphNodeData.value)\n        .data(\"cytoLabel_\", graphNodeData.cytoLabel)\n        .data(\"cytoLabelShort_\", graphNodeData.cytoLabelShort)\n        .classes(graphClasses)\n        .removeStyle()\n        .style(graphNodeData.cytoStyle);\n      // .animate({\n      //   // style: graphNodeData.cytoStyle,\n      //   duration: cytoDur\n      // });\n\n      // pulse value change\n      if (graphNodeData.valueChangedStatus.isActiveAtStep(k)) {\n        onLayoutReady.push(function() {\n          cyNode.flashClass(\"nodeStartBig\", 125);\n        });\n      }\n      // pulse value enter or invalidate change\n      if (\n        graphNodeData.invalidateStatus.isActiveAtStep(k) ||\n        graphNodeData.enterStatus.isActiveAtStep(k)\n      ) {\n        onLayoutReady.push(function() {\n          switch (graphNodeData.type) {\n            case \"observable\":\n              cyNode.flashClass(\"nodeMiddleBig\", 125);\n              break;\n            case \"observer\":\n              cyNode.flashClass(\"nodeEndBig\", 125);\n              break;\n          }\n        });\n      }\n    });\n    // exit visible nodes\n    nodesLRB.left.map(function(cytoNode) {\n      cy.remove(cytoNode);\n      // .animate({duration: cytoDur});\n    });\n\n    let cyEdges = cy.edges();\n    let graphEdges = graphCyto.edges();\n    let edgesLRB = cyEdges.diff(graphEdges);\n    // enter visible edges\n    edgesLRB.right.map(function(graphEdge: CytoscapeEdge) {\n      let graphEdgeData = (graphEdge.data(): Edge);\n      cy.add(graphEdge)\n        .classes(graphEdgeData.cytoClasses)\n        .removeStyle()\n        .style(graphEdgeData.cytoStyle);\n      // .animate({\n      //   style: graphEdgeData.cytoStyle,\n      //   duration: cytoDur\n      // });\n    });\n    // update visible edges\n    edgesLRB.both.map(function(cytoEdge) {\n      let graphEdgeData = graphEdges.$id(cytoEdge.id()).data();\n      cy.$id(cytoEdge.id())\n        // .classes()\n        .classes(graphEdgeData.cytoClasses)\n        .data(graphEdgeData)\n        .removeStyle()\n        .style(graphEdgeData.cytoStyle);\n      // .animate({\n      //   style: graphEdgeData.cytoStyle,\n      //   duration: cytoDur\n      // });\n    });\n    // exit visible edges\n    edgesLRB.left.map(function(cytoEdge) {\n      // var graphEdge = cytoEdge.data();\n      // remove the original edge\n      cy.remove(cytoEdge);\n      //  .animate({ duration: cytoDur });\n    });\n\n    cy.endBatch();\n\n    // send in sorted elements according to the key.\n    // If provided in a consistent order, layouts are consistent.\n    // `eles` default to `options.eles != null ? options.eles : cy.$();`\n    let sortedElements = cy.$().sort(function(a, b) {\n      return a.data().key > b.data().key ? 1 : -1;\n    });\n\n    // if no new edges appeared or disappeared\n    // or no nodes entered or exited\n    if (\n      edgesLRB.right.length === edgesLRB.left.length &&\n      nodesLRB.right.length === 0 &&\n      nodesLRB.left.length === 0 &&\n      !someNodeHasNewLabel &&\n      cytoOptions.forceRedraw !== true\n    ) {\n      // do not re-render layout... just call onLayoutReady\n      onLayoutReady.map(function(fn) {\n        fn();\n      });\n    } else {\n      // calculate a new layout\n      // time expensive!!!\n\n      // stop previous layout\n      if (this.cytoLayout) {\n        this.cytoLayout.stop();\n        this.cytoLayout = null;\n      }\n\n      this.cytoLayout = cy.layout(\n        _assign(\n          {},\n          layoutOptions,\n          cytoOptions,\n          {\n            // provide elements in sorted order to make determanistic layouts\n            eles: sortedElements,\n            // run on layout ready\n            ready: function() {\n              onLayoutReady.map(function(fn) {\n                fn();\n              });\n            },\n          }\n          // ,\n          // TODO-barret Make animation a setting... it's expensive!\n          // {animate: true}\n        )\n      );\n      // remove the layout once it's finished\n      this.cytoLayout.one(\"layoutstop\", function(evt: any) {\n        if (this.cytoLayout) {\n          this.cytoLayout = null;\n        }\n      });\n      this.cytoLayout.run();\n    }\n  }\n}\n\nfunction hasLength(x: Array<any>): boolean %checks {\n  return x && x.length > 0;\n}\n\nexport { GraphAtStep, hasLength };\n","// @flow\n\nimport type { Node } from \"./Node\";\nimport type { Edge } from \"./Edge\";\nimport type { GhostEdge } from \"./GhostEdge\";\n\nclass HoverStatus {\n  static valFocused = \"focused\";\n  static valNotFocused = \"notFocused\";\n\n  static valSticky = true;\n  static valNotSticky = false;\n\n  static valSelected = true;\n  static valNotSelected = false;\n\n  static valFiltered = true;\n  static valNotFiltered = false;\n\n  static onFn = function(\n    hoverKey: \"state\" | \"sticky\" | \"selected\" | \"filtered\"\n  ) {\n    switch (hoverKey) {\n      case \"state\":\n        return function(x: Node | Edge | GhostEdge) {\n          x.hoverStatus.toFocused();\n        };\n      case \"sticky\":\n        return function(x: Node | Edge | GhostEdge) {\n          x.hoverStatus.toSticky();\n        };\n      case \"selected\":\n        return function(x: Node | Edge | GhostEdge) {\n          x.hoverStatus.toSelected();\n        };\n      case \"filtered\":\n        return function(x: Node | Edge | GhostEdge) {\n          x.hoverStatus.toFiltered();\n        };\n      default:\n        throw `hoverKey: ${hoverKey} provided is not found`;\n    }\n  };\n  static offFn = function(\n    hoverKey: \"state\" | \"sticky\" | \"selected\" | \"filtered\"\n  ) {\n    switch (hoverKey) {\n      case \"state\":\n        return function(x: Node | Edge | GhostEdge) {\n          x.hoverStatus.toNotFocused();\n        };\n      case \"sticky\":\n        return function(x: Node | Edge | GhostEdge) {\n          x.hoverStatus.toNotSticky();\n        };\n      case \"selected\":\n        return function(x: Node | Edge | GhostEdge) {\n          x.hoverStatus.toNotSelected();\n        };\n      case \"filtered\":\n        return function(x: Node | Edge | GhostEdge) {\n          x.hoverStatus.toNotFiltered();\n        };\n      default:\n        throw `hoverKey: ${hoverKey} provided is not found`;\n    }\n  };\n\n  sticky: boolean;\n  state: \"focused\" | \"notFocused\";\n  selected: boolean;\n  filtered: boolean;\n\n  constructor(data: HoverStatus | null = null) {\n    if (data instanceof HoverStatus) {\n      this.sticky = data.sticky;\n      this.state = data.state;\n      this.selected = data.selected;\n      this.filtered = data.filtered;\n    } else {\n      this.sticky = HoverStatus.valNotSticky; // true / false\n      this.state = \"focused\"; // \"focused\", \"notFocused\"\n      this.selected = false;\n      this.filtered = false;\n    }\n  }\n  isSticky() {\n    return this.sticky === HoverStatus.valSticky;\n  }\n  toNotSticky() {\n    this.sticky = HoverStatus.valNotSticky;\n  }\n  toSticky() {\n    this.sticky = HoverStatus.valSticky;\n  }\n\n  isFocused() {\n    return this.state === HoverStatus.valFocused;\n  }\n  toFocused() {\n    this.state = HoverStatus.valFocused;\n  }\n  toNotFocused() {\n    this.state = HoverStatus.valNotFocused;\n  }\n\n  isSelected() {\n    return this.selected === HoverStatus.valSelected;\n  }\n  toSelected() {\n    this.selected = HoverStatus.valSelected;\n  }\n  toNotSelected() {\n    this.selected = HoverStatus.valNotSelected;\n  }\n\n  isFiltered() {\n    return this.filtered === HoverStatus.valFiltered;\n  }\n  toFiltered() {\n    this.filtered = HoverStatus.valFiltered;\n  }\n  toNotFiltered() {\n    this.filtered = HoverStatus.valNotFiltered;\n  }\n}\n\nexport { HoverStatus };\n","// @flow\n\nimport _isNil from \"lodash/isNil\";\n\nimport { rlog } from \"../rlog\";\n\nimport { LogStates } from \"../log/logStates\";\nimport { HoverStatus } from \"./HoverStatus\";\nimport { ActiveStateStatus } from \"./ActiveStateStatus\";\nimport { StatusArr } from \"./StatusArr\";\nimport type { LogEntryAnyType, CtxIdType } from \"../log/logStates\";\nimport type { StatusEntry } from \"./StatusArr\";\nimport type { CytoData } from \"../cyto/cytoFlowType\";\n\n// // TODO-barret use log states everywhere\n// import logStates from \"../log/logStates\"\n\nclass Node {\n  reactId: string;\n  label: string;\n  type: string;\n  session: string;\n  time: number;\n  isFrozen: boolean;\n  statusArr: StatusArr;\n  value: ?string;\n  hoverStatus: HoverStatus;\n  valueChangedStatus: ActiveStateStatus;\n  enterStatus: ActiveStateStatus;\n  invalidateStatus: ActiveStateStatus;\n  isDisplayed: boolean;\n  calculationTime: ?number;\n  calculationStartMap: Map<CtxIdType, number>;\n\n  constructor(data: Node | NodeInputType) {\n    if (typeof data.reactId === \"undefined\")\n      throw \"data.reactId not provided in new Node\";\n    if (typeof data.label === \"undefined\")\n      throw \"data.label not provided in new Node\";\n    if (typeof data.type === \"undefined\")\n      throw \"data.type not provided in new Node\";\n    if (typeof data.session === \"undefined\")\n      throw \"data.session not provided in new Node\";\n    if (typeof data.time === \"undefined\")\n      throw \"data.time not provided in new Node\";\n    this.reactId = data.reactId;\n    this.label = data.label;\n    this.type = data.type;\n    this.session = _isNil(data.session) ? \"Global\" : data.session;\n    this.time = data.time;\n    this.isFrozen = data.isFrozen || false;\n    this.statusArr = new StatusArr(data.statusArr || []);\n    this.value = _isNil(data.value) ? null : data.value;\n    this.hoverStatus = new HoverStatus(data.hoverStatus);\n    this.isDisplayed = _isNil(data.isDisplayed) ? true : data.isDisplayed;\n\n    this.calculationTime = _isNil(data.calculationTime)\n      ? null\n      : data.calculationTime;\n    this.calculationStartMap = _isNil(data.calculationStartMap)\n      ? new Map()\n      : new Map(data.calculationStartMap);\n\n    this.valueChangedStatus =\n      data.valueChangedStatus || new ActiveStateStatus();\n\n    // this.inInvalidate = data.inInvalidate || false;\n    // this.activeInvalidate = data.activeInvalidate || false;\n\n    this.enterStatus = data.enterStatus || new ActiveStateStatus();\n\n    if (data.invalidateStatus) {\n      this.invalidateStatus = data.invalidateStatus;\n    } else {\n      this.invalidateStatus = new ActiveStateStatus();\n      // init state for observer and obervable is to be invalidated\n      switch (this.type) {\n        case \"observable\":\n        case \"observer\":\n          this.invalidateStatus.toFinished();\n          break;\n      }\n    }\n  }\n\n  get id(): NodeIdType {\n    return this.reactId.replace(/\\$/g, \"_\");\n  }\n  get key(): NodeKeyType {\n    return this.reactId;\n  }\n  get hoverKey(): NodeHoverKeyType {\n    return this.key;\n  }\n  statusAdd(logEntry: LogEntryAnyType): StatusArr {\n    if (logEntry.action === LogStates.enter) {\n      this.calculationStartMap.set(logEntry.ctxId, logEntry.time);\n    }\n    switch (logEntry.action) {\n      case LogStates.enter:\n      case LogStates.isolateInvalidateStart:\n      case LogStates.invalidateStart:\n        this.calculationTime = null;\n        break;\n    }\n    this.statusArr.add(((logEntry: Object): StatusEntry));\n    return this.statusArr;\n  }\n  statusRemove(logEntry: LogEntryAnyType): StatusEntry {\n    if (logEntry.action === LogStates.exit) {\n      let startEntryTime = this.calculationStartMap.get(logEntry.ctxId);\n      if (!_isNil(startEntryTime)) {\n        this.calculationTime = (logEntry.time - startEntryTime) * 1000;\n      }\n      this.calculationStartMap.delete(logEntry.ctxId);\n    }\n    return this.statusArr.remove();\n  }\n  statusLast(): StatusEntry {\n    return this.statusArr.last();\n  }\n  get inEnter(): boolean {\n    return this.statusArr.containsStatus(LogStates.enter);\n  }\n  get inIsolate(): boolean {\n    return this.statusArr.containsStatus(LogStates.isolateEnter);\n  }\n  get inInvalidate(): boolean {\n    return this.statusArr.containsStatus(LogStates.invalidateStart);\n  }\n  get inIsolateInvalidate(): boolean {\n    return this.statusArr.containsStatus(LogStates.isolateInvalidateStart);\n  }\n  get cytoStyle() {\n    return {};\n  }\n  get cytoLabel(): string {\n    let label = `${this.label}`;\n    if (this.type === \"observer\" || this.type === \"observable\") {\n      let time = this.calculationTime;\n      if (rlog.displayTimeOnNodes) {\n        if (!_isNil(time)) {\n          // is just chillin... so I'm assuming it's calculated and I want to know how long it took.\n          return `${label}\\n\\nCalculation Time: ${time.toFixed(0)}ms`;\n        }\n      }\n      return label;\n    }\n    // not a middle or end node...\n    if (!_isNil(this.value)) {\n      let value = `${this.value}`;\n      // only if there are no new lines...\n      if (!value.includes(\"\\\\n\")) {\n        // trim beginning of string\n        value = value.replace(/^\\s+/, \"\");\n      }\n      return `${label}\\n\\nValue:\\n${value}`;\n    }\n    return label;\n  }\n  get cytoLabelShort(): string {\n    let label = `${this.label}`.replace(/[\\t\\n\\r ]+/g, \" \");\n    if (this.type === \"observer\" || this.type === \"observable\") {\n      let time = this.calculationTime;\n      if (rlog.displayTimeOnNodes) {\n        if (!_isNil(time)) {\n          // is just chillin... so I'm assuming it's calculated and I want to know how long it took.\n          return `${label} (${time.toFixed(0)}ms)`;\n        }\n      }\n      return label;\n    }\n    // not a middle or end node...\n    if (!_isNil(this.value)) {\n      let value = `${this.value}`;\n      // only if there are no new lines...\n      if (!value.includes(\"\\\\n\")) {\n        // trim beginning of string\n        value = value.replace(/^\\s+/, \"\");\n      }\n      return `${label} - '${value}'`;\n    }\n    return label;\n  }\n  get cytoClasses(): string {\n    let classes = [];\n    switch (this.type) {\n      case \"observer\":\n        classes.push(\"nodeEnd\");\n        break;\n      case \"observable\":\n        classes.push(\"nodeMiddle\");\n        break;\n      default:\n        classes.push(\"nodeStart\");\n    }\n\n    if (this.inEnter) classes.push(\"nodeEnter\");\n    if (this.enterStatus.isActive) classes.push(\"nodeEnterActive\");\n\n    if (this.type === \"observer\" || this.type === \"observable\") {\n      if (this.invalidateStatus.isActive) classes.push(\"nodeInvalidateActive\");\n      else if (this.invalidateStatus.isOn) classes.push(\"nodeInvalidate\");\n      else if (this.invalidateStatus.isFinished)\n        classes.push(\"nodeInvalidateDone\");\n    }\n    // if (this.inInvalidate) classes.push(\"nodeInvalidate\");\n    if (this.inIsolate) classes.push(\"nodeIsolate\");\n    // if (this.inIsolateInvalidate) classes.push(\"nodeIsolateInvalidate\");\n    if (this.valueChangedStatus.isOn) classes.push(\"nodeValueChanged\");\n\n    switch (this.hoverStatus.state) {\n      case HoverStatus.valFocused:\n        break;\n      case HoverStatus.valNotFocused:\n        // console.log(\"not focused!\")\n        if (this.hoverStatus.isSticky()) {\n          classes.push(\"hoverNotFocusedButSticky\");\n        } else {\n          classes.push(\"hoverNotFocused\");\n        }\n        break;\n    }\n    if (this.hoverStatus.isSelected()) {\n      classes.push(\"nodeSelected\");\n      switch (this.type) {\n        case \"observable\":\n          classes.push(\"nodeSelectedMiddle\");\n          break;\n        case \"observer\":\n          classes.push(\"nodeSelectedEnd\");\n          break;\n        default:\n          classes.push(\"nodeSelectedStart\");\n      }\n    }\n    if (this.hoverStatus.isFiltered()) {\n      classes.push(\"nodeFiltered\");\n      switch (this.type) {\n        case \"observable\":\n          classes.push(\"nodeFilteredMiddle\");\n          break;\n        case \"observer\":\n          classes.push(\"nodeFilteredEnd\");\n          break;\n        default:\n          classes.push(\"nodeFilteredStart\");\n      }\n    }\n\n    if (this.isFrozen) classes.push(\"nodeFrozen\");\n\n    if (!this.isDisplayed) classes.push(\"nodeHidden\");\n    return classes.join(\" \");\n  }\n  get cytoData(): CytoData {\n    let retData = this;\n    return {\n      group: \"nodes\",\n      data: retData,\n    };\n  }\n}\n\ntype NodeKeyType = string;\ntype NodeHoverKeyType = string;\ntype NodeIdType = string;\n\ntype NodeInputType = {\n  reactId: string,\n  label: string,\n  type: string,\n  session: ?string,\n  time: number,\n  isFrozen?: boolean,\n  statusArr?: StatusArr,\n  value: ?string,\n  hoverStatus?: HoverStatus,\n  valueChangedStatus?: ActiveStateStatus,\n  enterStatus?: ActiveStateStatus,\n  invalidateStatus?: ActiveStateStatus,\n  isDisplayed?: boolean,\n  calculationTime?: number,\n  calculationStartMap?: number,\n};\n\nexport { Node };\nexport type { NodeKeyType, NodeHoverKeyType, NodeIdType, NodeInputType };\n","// @flow\n\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _last from \"lodash/last\";\n\nimport console from \"../utils/console\";\n\nimport type { ActionsType } from \"../log/logStates\";\n\nclass StatusArr {\n  statusArr: Array<StatusEntry>;\n\n  constructor(statusArr: StatusArr | Array<StatusEntry> = []) {\n    if (statusArr instanceof StatusArr) {\n      this.statusArr = _cloneDeep(statusArr.statusArr);\n    } else if (Array.isArray(statusArr)) {\n      this.statusArr = statusArr;\n    }\n  }\n  clone(): StatusArr {\n    return new StatusArr(this);\n  }\n  add(obj: StatusEntry) {\n    return this.statusArr.push(obj);\n  }\n  remove(): StatusEntry {\n    return this.statusArr.pop();\n  }\n  last(): StatusEntry {\n    return _last(this.statusArr);\n  }\n  containsStatus(status: string) {\n    let arr = this.statusArr,\n      n = arr.length;\n    for (let i = 0; i < n; i++) {\n      if (arr[i].action === status) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\ntype StatusEntry = {\n  action: ActionsType,\n  ctxId: string,\n};\n\nlet expectPrevStatus = function(\n  curStatus: StatusEntry,\n  prevStatus: StatusEntry,\n  expectedAction: string\n) {\n  function onError(msg: string) {\n    console.error(\"curStatus: \", curStatus);\n    console.error(\"prevStatus: \", prevStatus);\n    throw msg;\n  }\n  if (prevStatus.action !== expectedAction) {\n    onError(`prior node status does not have \"${expectedAction}\" status`);\n  }\n  if (prevStatus.ctxId !== curStatus.ctxId) {\n    onError(`prior node \"ctxId\" status does not have the same \"ctxId\" status`);\n  }\n};\n\nexport { StatusArr, expectPrevStatus };\nexport type { StatusEntry };\n","// @flow\n\nimport $ from \"jquery\";\nimport _debounce from \"lodash/debounce\";\n\nimport { rlog } from \"./rlog\";\n\nimport { LogStates } from \"./log/logStates\";\n\nimport { GraphAtStep } from \"./graph/GraphAtStep\";\n\nimport colors from \"./style/colors\";\n\nimport * as cytoscapeInit from \"./cyto/cytoscapeInit\";\n\nimport * as layoutKeydown from \"./layout/keydown\";\n\nimport * as updateGraph from \"./updateGraph\";\n\nimport * as logEntry from \"./layout/logEntry\";\nimport * as progressBar from \"./layout/progressBar\";\n\nimport type { LogType } from \"./log/logStates\";\n\nimport \"./log/initStep\";\n\n// https://ponyfoo.com/articles/es6-modules-in-depth\n// https://github.com/DrkSephy/es6-cheatsheet\n\n// TODO-barret\n// √ add buttons for moving around\n// √ clean up how active states are done\n// √ pulse on active enter change\n// √ pulse on valueChange\n// √ highlight tree on hover\n// √ keep highlight sticky on click\n// X add edge styles\n// X  distinguish active vs running edges\n// X set up cloning of graph after every 250 steps\n// √ filtering\n// X update legend\n// - Re do how subsetting is done by \"selecting\" and item and always be interested in that item\n// enter/exit status and invalidateStart/End need to be controled by a single array status\n\n// // Questions\n// should layout be done with full graph and only \"turn on\" / \"turn off\" the nodes/edges?\n// should filtering be done with the full layout?\n//\n\n$(function() {\n  window.barret = rlog;\n\n  rlog.log = (window.log: LogType);\n  rlog.cyto = cytoscapeInit.withContainer($(\"#cyto\"));\n\n  rlog.getGraph = new GraphAtStep(rlog.log);\n  rlog.graph = rlog.getGraph.finalCompleteGraph;\n\n  $(\"#prevUserMarkButton\").click(updateGraph.buttonPrevMark);\n  $(\"#nextUserMarkButton\").click(updateGraph.buttonNextMark);\n  $(\"#prevOutputCalcButton\").click(updateGraph.buttonPrevOutputCalc);\n  $(\"#nextOutputCalcButton\").click(updateGraph.buttonNextOutputCalc);\n  $(\"#prevIdleButton\").click(updateGraph.buttonPrevIdle);\n  $(\"#nextIdleButton\").click(updateGraph.buttonNextIdle);\n  $(\"#prevStepButton\").click(updateGraph.buttonPrevStep);\n  $(\"#nextStepButton\").click(updateGraph.buttonNextStep);\n\n  $(\"#legendInvalidating\").css(\"background-color\", colors.nodes.invalidating);\n  $(\"#legendInvalidated\").css(\"background-color\", colors.nodes.invalidated);\n  $(\"#legendCalculating\").css(\"background-color\", colors.nodes.calculating);\n  $(\"#legendReady\").css(\"background-color\", colors.nodes.ready);\n  {\n    // display the frozen legend item only if a frozen state exists\n    let entry;\n    for (let i = 0; i < rlog.log.length; i++) {\n      entry = rlog.log[i];\n      if (entry.action === LogStates.freeze) {\n        $(\"#legendRowFrozen\").css(\"display\", \"\"); // remove display none form css\n        $(\"#legendFrozen\").css(\"background-color\", colors.frozen.default);\n        break;\n      }\n    }\n  }\n\n  progressBar.setContainers($(\"#timeline\"), $(\"#timeline-fill\"));\n  let timelineBackground = $(\"#timeline-bg\");\n  progressBar.addTimelineTicks(\n    timelineBackground,\n    colors.nodes.ready,\n    rlog.getGraph.stepsOutputCalc,\n    progressBar.timelinePadding * 2\n  );\n  progressBar.addTimelineTicks(\n    timelineBackground,\n    colors.progressBar.idle,\n    rlog.getGraph.stepsIdle,\n    0\n  );\n  if (rlog.getGraph.stepsUserMark.length > 0) {\n    progressBar.addTimelineTicks(\n      timelineBackground,\n      colors.progressBar.userMark,\n      rlog.getGraph.stepsUserMark,\n      0\n    );\n  }\n  logEntry.setContainers(\n    $(\"#eventTimeNum\"),\n    $(\"#eventSessionNum\"),\n    $(\"#eventStepNum\"),\n    $(\"#eventStatus\"),\n    $(\"#logEntry\"),\n    rlog.log,\n    rlog.getGraph.stepsVisible.length\n  );\n\n  window.addEventListener(\n    \"resize\",\n    _debounce(\n      function(e) {\n        updateGraph.resize();\n      },\n      250,\n      { maxWait: 1000 }\n    )\n  );\n\n  updateGraph.searchStringContainer($(\"#search\"));\n\n  {\n    let docBody = document.body;\n    if (docBody) {\n      layoutKeydown.addKeydown($(docBody));\n    }\n  }\n\n  {\n    let cytoOpts = {\n      fit: true,\n      stop: function(evt) {\n        let zoomLevel = rlog.cyto.zoom();\n        let logZoomLevel = Math.log2(zoomLevel);\n\n        // zoom out twice as far\n        rlog.cyto.minZoom(Math.pow(2, logZoomLevel - 1));\n\n        // // zoom in to double the size\n        // rlog.cyto.maxZoom(Math.pow(2, logZoomLevel + 3)); // zoom in\n      },\n    };\n    // start at last user mark or first idle location\n    updateGraph.lastUserMark(cytoOpts) || updateGraph.nextIdle(cytoOpts);\n  }\n});\n","// @flow\n\nimport $ from \"jquery\";\nimport _defer from \"lodash/defer\";\n\n// import console from \"../utils/console\";\n\nimport * as updateGraph from \"../updateGraph\";\nimport { hasLength } from \"../graph/GraphAtStep\";\nimport { rlog } from \"../rlog\";\n\nlet onKeydown = function(e: JQueryInputEventObject): void {\n  // console.log(\"keydown: \", e);\n  let target = $(e.target).get(0);\n  if (target.id && target.id === \"search\") {\n    // is in search text box\n    if (e.which === 27) {\n      // esc hit. remove focus from search box\n      target.blur();\n    } else {\n      // let act like normal\n      // if (e.which == 13) { // enter\n      // }\n    }\n    return;\n  }\n  if (e.which === 39 || e.which === 32) {\n    // space, right\n    if (e.altKey) {\n      if (e.shiftKey) {\n        // option + shift + right\n        if (updateGraph.buttonNextIdle()) {\n          return;\n        }\n        // if it can't go right, try a cycle\n      }\n      // option + right\n      // return false if there is no more enter/exit empty marks\n      if (updateGraph.buttonNextOutputCalc()) {\n        return;\n      }\n      // if it cant go right, try a step\n    } else if (e.shiftKey) {\n      // shift + right\n      updateGraph.nextTick();\n      return;\n    }\n    if (rlog.curTick < rlog.getGraph.maxStep) {\n      // right\n      updateGraph.buttonNextStep();\n      return;\n    }\n  }\n  if (e.which === 37) {\n    // left\n    if (e.altKey) {\n      if (e.shiftKey) {\n        // option + shift + left\n        if (updateGraph.buttonPrevIdle()) {\n          return;\n        }\n        // if can't go left, try cycle\n      }\n      // option + left\n      if (updateGraph.buttonPrevOutputCalc()) {\n        return;\n      }\n      // if can't go left, try step\n    } else if (e.shiftKey) {\n      // shift + left\n      updateGraph.prevTick();\n      return;\n    }\n    if (rlog.curTick > 1) {\n      // left\n      updateGraph.buttonPrevStep();\n      return;\n    }\n  }\n  if (e.which === 35) {\n    // end\n    // Seek to next mark or end\n    updateGraph.buttonNextMark();\n    return;\n  }\n  if (e.which === 36) {\n    // home\n    // Seek to prev mark or beginning\n    updateGraph.buttonPrevMark();\n    return;\n  }\n\n  if (e.which === 27) {\n    // esc\n\n    // remove hover\n    // remove sticky\n    //   if sicky == filter\n    //     remove sticky and filter\n    // remove filter\n    // if (rlog.getGraph.hoverData) {\n    //   console.log(\"reset hover\");\n    //   updateGraph.hoverDataReset();\n    //   return;\n    // }\n    if (hasLength(rlog.getGraph.stickyDatas)) {\n      // console.log(\"reset sticky\");\n      let sd = rlog.getGraph.stickyDatas;\n      let fd = rlog.getGraph.filterDatas;\n      if (hasLength(fd)) {\n        if (sd.length === fd.length) {\n          let sdReactIdStr = sd.map(x => x.reactId).join(\", \");\n          let fdReactIdStr = fd.map(x => x.reactId).join(\", \");\n          if (sdReactIdStr === fdReactIdStr) {\n            // the filter data is the same as the sticky data\n            // remove both\n            rlog.getGraph.resetHoverStickyFilterSearch();\n            updateGraph.updateGraph(rlog.curTick, { fit: true });\n            return;\n          }\n        }\n        // reset to original filter data information\n        updateGraph.stickyDatas(rlog.getGraph.filterDatas);\n        return;\n      }\n      // reset sticky data\n      updateGraph.stickyDatasReset();\n      return;\n    } else if (hasLength(rlog.getGraph.filterDatas)) {\n      // console.log(\"reset filter\");\n      // must be in filter... so exit filter\n      updateGraph.searchRegexReset();\n      return;\n    }\n    return;\n  }\n  if (e.which === 38) {\n    // arrow up\n    if (hasLength(rlog.getGraph.filterDatas)) {\n      // TODO-barret add filter expansion layer here\n      // console.log(\"add layer!\");\n    }\n    return;\n  }\n  if (e.which === 40) {\n    // arrow down\n    if (hasLength(rlog.getGraph.filterDatas)) {\n      // TODO-barret remove filter expansion layer here\n      // console.log(\"remove layer!\");\n    }\n    return;\n  }\n  if (e.which === 83) {\n    // s\n    _defer(function() {\n      $(\"#search\").focus();\n    });\n    e.stopPropagation();\n    return;\n  }\n\n  if (e.which === 76) {\n    // l // for Log\n\n    let cssVal = $(\"#logEntry\").css(\"display\");\n    if (cssVal !== \"none\") {\n      $(\"#logEntry\").css(\"display\", \"none\");\n    } else {\n      $(\"#logEntry\").css(\"display\", \"inline\");\n    }\n  }\n\n  if (e.which === 70) {\n    // f // for fit graph\n    updateGraph.resize();\n  }\n};\n\nlet addKeydown = function(jqueryContainer: JQuery) {\n  jqueryContainer.keydown(onKeydown);\n};\n\nexport { addKeydown };\nexport default onKeydown;\n","// @flow\n\nimport _sortedIndex from \"lodash/sortedIndex\";\nimport _sortedIndexOf from \"lodash/sortedIndexOf\";\nimport _isNil from \"lodash/isNil\";\n\nimport { rlog } from \"../rlog\";\n\nimport { roundDecimals } from \"../utils/numbers\";\n\nimport { LogStates } from \"../log/logStates\";\nimport type {\n  LogType,\n  ReactIdType,\n  LogEntryHasReactId,\n  LogEntryAnyType,\n  LogEntryCreateContextType,\n  LogEntryDefineType,\n  LogEntryDependsOnType,\n  LogEntryDependsOnRemoveType,\n  LogEntryEnterType,\n  LogEntryExitType,\n  LogEntryFreezeType,\n  LogEntryThawType,\n  LogEntryInvalidateLaterType,\n  LogEntryInvalidateStartType,\n  LogEntryInvalidateEndType,\n  LogEntryIsolateEnterType,\n  LogEntryIsolateExitType,\n  LogEntryIsolateInvalidateStartType,\n  LogEntryIsolateInvalidateEndType,\n  LogEntryUpdateNodeLabelType,\n  LogEntryValueChangeType,\n} from \"../log/logStates\";\n\nlet containers: {\n  container: JQuery,\n  time: JQuery,\n  session: JQuery,\n  step: JQuery,\n  status: JQuery,\n};\nlet timeDecimalDigits = 4;\nlet logInfo: {\n  logLength: number,\n  firstTime: number,\n  lastTimeCharLength: number,\n  maxSessionCharLength: number,\n} = {\n  logLength: 0,\n  firstTime: 0,\n  lastTimeCharLength: 0,\n  maxSessionCharLength: 0,\n};\n\nlet updateLogEntry = function(): void {\n  if (logInfo.logLength === 0) return;\n\n  let curEntry = rlog.log[rlog.curTick];\n\n  let timeDiff = curEntry.time - logInfo.firstTime; // milliseconds\n\n  timeDiff = roundDecimals(timeDiff, timeDecimalDigits)\n    .toFixed(timeDecimalDigits)\n    .padStart(logInfo.lastTimeCharLength, \" \");\n\n  containers.time.text(`${timeDiff}s`);\n  if (!_isNil(curEntry.session)) {\n    containers.session.text(\n      `${curEntry.session}`.padEnd(logInfo.maxSessionCharLength, \" \")\n    );\n  } else {\n    containers.session.text(\n      \"(Global)\".padEnd(logInfo.maxSessionCharLength, \" \")\n    );\n  }\n\n  let stepDisplayValPadding = function(i) {\n    return `${i}`.padStart(`${logInfo.logLength}`.length, \" \");\n  };\n\n  let stepDisplayVal = _sortedIndex(rlog.getGraph.stepsVisible, curEntry.step);\n  if (_sortedIndexOf(rlog.getGraph.stepsVisible, curEntry.step) === -1) {\n    // does not contain the step. display how many steps advanced from last visible step\n\n    if (stepDisplayVal === 0) {\n      // occurs before any visible step\n      // let halfStepPos = _sortedIndex(rlog.getGraph.steps, curEntry.step);\n      stepDisplayVal = `${stepDisplayValPadding(0)}_${curEntry.step}`;\n    } else {\n      // get visible step location\n      let smallerStepVal = rlog.getGraph.stepsVisible[stepDisplayVal - 1];\n      let smallerStepValVisible = _sortedIndex(\n        rlog.getGraph.stepsVisible,\n        smallerStepVal\n      );\n      let smallerPos = _sortedIndex(rlog.getGraph.steps, smallerStepVal);\n      let halfStepPos = _sortedIndex(rlog.getGraph.steps, curEntry.step);\n\n      // display number of steps away from lower, visible step\n      let diffSteps = halfStepPos - smallerPos;\n      stepDisplayVal = `${stepDisplayValPadding(\n        smallerStepValVisible + 1\n      )}_${diffSteps}`;\n    }\n  } else {\n    // 1 start counting (not 0)\n    stepDisplayVal = stepDisplayValPadding(stepDisplayVal + 1);\n  }\n  containers.step.text(`${stepDisplayVal}`);\n  containers.status.html(statusForEntry(curEntry));\n\n  containers.container.text(JSON.stringify(rlog.log[rlog.curTick], null, \"  \"));\n};\n\nlet setContainers = function(\n  time: JQuery,\n  session: JQuery,\n  step: JQuery,\n  status: JQuery,\n  container: JQuery,\n  log: LogType,\n  maxVisibleStep: number\n): void {\n  let logInfoLength = log.length;\n  let maxSessionCharLength = 0;\n  let logEntry, sessionCharLength;\n\n  // find largest session name length\n  for (let i = 0; i < logInfoLength; i++) {\n    logEntry = log[i];\n    if (!_isNil(logEntry.session)) {\n      sessionCharLength = logEntry.session.length;\n      if (sessionCharLength > maxSessionCharLength) {\n        maxSessionCharLength = sessionCharLength;\n      }\n    }\n  }\n\n  logInfo = {\n    logLength: maxVisibleStep,\n    firstTime: log[rlog.getGraph.stepsVisible[0]].time,\n    maxSessionCharLength: maxSessionCharLength,\n    lastTimeCharLength: (\n      log[logInfoLength - 1].time - log[rlog.getGraph.stepsVisible[0]].time\n    ).toFixed(timeDecimalDigits).length,\n  };\n  containers = {\n    time: time,\n    session: session,\n    step: step,\n    status: status,\n    container: container,\n  };\n};\n\nlet getLabel = function(reactId: ReactIdType): string {\n  let node = rlog.graph.nodes.get(reactId);\n  if (node) {\n    return node.label;\n  } else {\n    return \"<unknown>\";\n  }\n};\nlet getReactIdLabel = function(entry: LogEntryHasReactId) {\n  return getLabel(entry.reactId);\n};\nlet getReactIdValue = function(entry: LogEntryHasReactId) {\n  let node = rlog.graph.nodes.get(entry.reactId);\n  if (node) {\n    if (!_isNil(node.value)) {\n      return node.value;\n    }\n  }\n  return \"<unknown>\";\n};\nlet getContextId = function(entry: LogEntryCreateContextType) {\n  return entry.ctxId;\n};\n\nlet monospaced = function(txt: string | number) {\n  return `<span class=\"monospaced\">${txt}</span>`;\n};\nlet statusForEntry = function(entry: LogEntryAnyType): string {\n  switch (entry.action) {\n    case LogStates.createContext: {\n      let contextEntry = ((entry: Object): LogEntryCreateContextType);\n      return `Create Context: ${monospaced(getContextId(contextEntry))}`;\n    }\n    case LogStates.asyncStart: {\n      return \"Start asynchronous calculations\";\n    }\n    case LogStates.asyncStop: {\n      return \"Start asynchronous calculations\";\n    }\n    case LogStates.define: {\n      let defineEntry = ((entry: Object): LogEntryDefineType);\n      return `Defined ${monospaced(getReactIdLabel(defineEntry))}`;\n    }\n    case LogStates.dependsOn: {\n      let dependsOnEntry = ((entry: Object): LogEntryDependsOnType);\n      return `${monospaced(\n        getReactIdLabel(dependsOnEntry)\n      )} depends on ${monospaced(getLabel(dependsOnEntry.depOnReactId))}`;\n    }\n    case LogStates.dependsOnRemove: {\n      let dependsOnRemoveEntry = ((entry: Object): LogEntryDependsOnRemoveType);\n      return `${monospaced(\n        getReactIdLabel(dependsOnRemoveEntry)\n      )} removes dependency on ${monospaced(\n        getLabel(dependsOnRemoveEntry.depOnReactId)\n      )}`;\n    }\n    case LogStates.enter: {\n      let enterEntry = ((entry: Object): LogEntryEnterType);\n      return `${monospaced(getReactIdLabel(enterEntry))} started calculating`;\n    }\n    case LogStates.exit: {\n      let exitEntry = ((entry: Object): LogEntryExitType);\n      return `${monospaced(getReactIdLabel(exitEntry))} stopped calculating`;\n    }\n    case LogStates.freeze: {\n      let frozenEntry = ((entry: Object): LogEntryFreezeType);\n      return `${monospaced(getReactIdLabel(frozenEntry))} froze`;\n    }\n    case LogStates.invalidateLater: {\n      let invalidateLaterEntry = ((entry: Object): LogEntryInvalidateLaterType);\n      return `${monospaced(\n        getReactIdLabel(invalidateLaterEntry)\n      )} will invalidate in ${monospaced(invalidateLaterEntry.millis)}ms`;\n    }\n    case LogStates.invalidateEnd: {\n      let invalidateEndEntry = ((entry: Object): LogEntryInvalidateEndType);\n      return `${monospaced(\n        getReactIdLabel(invalidateEndEntry)\n      )} has invalidated`;\n    }\n    case LogStates.invalidateStart: {\n      let invalidateStartEntry = ((entry: Object): LogEntryInvalidateStartType);\n      return `${monospaced(\n        getReactIdLabel(invalidateStartEntry)\n      )} is invalidating`;\n    }\n    case LogStates.isolateEnter: {\n      let isolateEnterEntry = ((entry: Object): LogEntryIsolateEnterType);\n      return `${monospaced(\n        getReactIdLabel(isolateEnterEntry)\n      )} is isolating future dependencies`;\n    }\n    case LogStates.isolateExit: {\n      let isolateExitEntry = ((entry: Object): LogEntryIsolateExitType);\n      return `${monospaced(\n        getReactIdLabel(isolateExitEntry)\n      )} stopped isolating future dependencies`;\n    }\n    case LogStates.isolateInvalidateEnd: {\n      let isolateInvalidateEndEntry = ((entry: Object): LogEntryIsolateInvalidateEndType);\n      return `${monospaced(\n        getReactIdLabel(isolateInvalidateEndEntry)\n      )} invalidated during an isolate call`;\n    }\n    case LogStates.isolateInvalidateStart: {\n      let isolateInvalidateStartEntry = ((entry: Object): LogEntryIsolateInvalidateStartType);\n      return `${monospaced(\n        getReactIdLabel(isolateInvalidateStartEntry)\n      )} is invalidating during an isolate call`;\n    }\n    case LogStates.userMark: {\n      return `User marked step`;\n    }\n    case LogStates.idle: {\n      return `Shiny App idle`;\n    }\n    case LogStates.thaw: {\n      let thawEntry = ((entry: Object): LogEntryThawType);\n      return `${monospaced(getReactIdLabel(thawEntry))} has thawed`;\n    }\n    case LogStates.updateNodeLabel: {\n      let updateNodeLabelEntry = ((entry: Object): LogEntryUpdateNodeLabelType);\n      return `Set label to ${monospaced(\n        getReactIdLabel(updateNodeLabelEntry)\n      )}`;\n    }\n    case LogStates.valueChange: {\n      let valueChangeEntry = ((entry: Object): LogEntryValueChangeType);\n      return `${monospaced(\n        getReactIdLabel(valueChangeEntry)\n      )} has a new value: ${monospaced(getReactIdValue(valueChangeEntry))}`;\n    }\n    default:\n      throw `state: ${monospaced(entry.action)} not implemented for log status`;\n  }\n};\n\nexport { updateLogEntry as update, setContainers };\n","// @flow\n\nimport _has from \"lodash/has\";\nimport $ from \"jquery\";\n\nimport _sortedIndex from \"lodash/sortedIndex\";\nimport _sortedIndexOf from \"lodash/sortedIndexOf\";\n\nimport { rlog } from \"../rlog\";\nimport { updateGraph } from \"../updateGraph\";\nimport { colors } from \"../style/colors\";\n\nlet fillContainer: JQuery;\nlet updateProgressBar = function(): void {\n  // fillContainer.width((rlog.curTick / rlog.log.length) * 100 + \"%\");\n  let stepsToPresent = rlog.getGraph.stepsVisible;\n  let tickPos = _sortedIndexOf(stepsToPresent, rlog.curTick);\n  if (tickPos === -1) {\n    tickPos = _sortedIndex(stepsToPresent, rlog.curTick) - 1;\n  }\n  // console.log(\"progress bar: \", tickPos, stepsToPresent.length, tickPos / stepsToPresent.length, rlog.curTick, stepsToPresent)\n  fillContainer.width(`${(tickPos / (stepsToPresent.length - 1)) * 100}%`);\n};\n\nlet setContainers = function(\n  fullContainerVal: JQuery,\n  fillContainerVal: JQuery\n): void {\n  fillContainerVal.css(\"background-color\", colors.progressBar.progress);\n  fillContainerVal.css(\"top\", `${timelinePadding}px`);\n  fillContainerVal.css(\"bottom\", `${timelinePadding}px`);\n  fillContainer = fillContainerVal;\n\n  fullContainerVal.css(\"height\", `${timelineHeight}px`);\n  fullContainerVal.css(\"min-height\", `${timelineHeight}px`);\n  fullContainerVal.css(\"background-color\", colors.progressBar.background);\n  fullContainerVal.on(\"mousedown mousemove\", updateFromProgressBar);\n};\n\nlet updateFromProgressBar = function(e: BaseJQueryEventObject): void {\n  // Make sure left mouse button is down.\n  // Firefox is stupid; e.which is always 1 on mousemove events,\n  // even when button is not down!! So read e.originalEvent.buttons.\n  if (!_has(e.originalEvent, \"buttons\")) {\n    // odd type casting as jquery doesn't believe this exists\n    let originalEvent = ((e.originalEvent: Object): MouseEvent);\n    if (originalEvent.buttons !== 1) return;\n  }\n  // return if not left click\n  if (e.which !== 1) {\n    return;\n  }\n  let timeline = $(e.currentTarget)[0];\n  let pos = e.pageX; // pageX in pixels  // || e.originalEvent.pageX;\n\n  let width = timeline.offsetWidth; // width in pixels\n\n  let stepsToPresent = rlog.getGraph.stepsVisible;\n  let targetStepPos = Math.min(\n    Math.max(Math.round((pos / width) * stepsToPresent.length), 0),\n    stepsToPresent.length - 1\n  );\n  let targetStep = stepsToPresent[targetStepPos];\n  if (targetStep !== rlog.curTick) {\n    updateGraph(targetStep);\n  }\n  return;\n};\n\nlet addTimelineTicks = function(\n  jqueryContainer: JQuery,\n  backgroundColor: string,\n  stepArr: Array<number>,\n  top: number = 0\n): void {\n  let visibleSteps = rlog.getGraph.stepsVisible;\n  let visibleStepLengthMinusOne = visibleSteps.length - 1;\n  let topValue =\n    top === 0\n      ? `top: 0; height: ${timelineHeight}px;`\n      : `top: ${top}px; height: ${timelineHeight - 2 * top}px`;\n  stepArr.map(function(step) {\n    let stepPos = _sortedIndex(visibleSteps, step);\n    // add an extra step to show that it is completed\n    // i = i + 1;\n    let left = (100 * stepPos) / visibleStepLengthMinusOne;\n    let width = ((100 * 1) / visibleStepLengthMinusOne) * 0.75;\n    jqueryContainer.append(\n      `<div class=\"timeline-tick\" style=\"background-color: ${backgroundColor}; left: ${left}%; width: ${width}%; margin-left: -${width}%; ${topValue}\"></div>`\n    );\n  });\n};\n\nlet timelineHeight = 20;\nlet timelinePadding = 3;\n\nexport {\n  updateProgressBar as update,\n  addTimelineTicks,\n  setContainers,\n  timelinePadding,\n};\n","// @flow\n\n// initialize all log entries to have a step value\n\nimport _map from \"lodash/map\";\n\nimport type { LogType } from \"./logStates\";\n\nif (window.__APP_DATA__) {\n  window.log = window.__APP_DATA__;\n}\n\n_map((window.log: LogType), function(entry, i: number) {\n  entry.step = i;\n});\n","// @flow\n\nlet states = {\n  asyncStart: \"asyncStart\",\n  asyncStop: \"asyncStop\",\n  createContext: \"createContext\",\n  define: \"define\",\n  dependsOn: \"dependsOn\",\n  dependsOnRemove: \"dependsOnRemove\",\n  enter: \"enter\",\n  exit: \"exit\",\n  freeze: \"freeze\",\n  invalidateEnd: \"invalidateEnd\",\n  invalidateStart: \"invalidateStart\",\n  invalidateLater: \"invalidateLater\",\n  isolateEnter: \"isolateEnter\",\n  isolateExit: \"isolateExit\",\n  isolateInvalidateEnd: \"isolateInvalidateEnd\",\n  isolateInvalidateStart: \"isolateInvalidateStart\",\n  userMark: \"userMark\",\n  idle: \"idle\",\n  thaw: \"thaw\",\n  updateNodeLabel: \"updateNodeLabel\",\n  valueChange: \"valueChange\",\n};\n\ntype ActionsType = $Values<typeof states>;\n\ntype ReactIdType = string;\ntype CtxIdType = string;\n\n// type EntryType = {\n//   action: ActionsType,\n//   session: ?string,\n//   time: number,\n//   step: number,\n// };\n\n// type TypeType =\n//   | \"observable\"\n//   | \"observer\"\n//   | \"reactiveVal\"\n//   | \"reactiveValuesNames\"\n//   | \"reactiveValuesAsList\"\n//   | \"reactiveValuesAsListAll\"\n//   | \"reactiveValuesKey\";\n\n// type EntryReactIdType = {\n//   session: ?string,\n//   time: number,\n//   step: number,\n//   reactId: ReactIdType,\n// };\n// type EntryContextType = {\n//   session: ?string,\n//   time: number,\n//   step: number,\n//   reactId: ReactIdType,\n//   ctxId: CtxIdType,\n// };\n\ntype LogEntryAsyncStartType = {\n  action: \"asyncStart\",\n  session: ?string,\n  time: number,\n  step: number,\n};\ntype LogEntryAsyncStopType = {\n  action: \"asyncStop\",\n  session: ?string,\n  time: number,\n  step: number,\n};\n\n// used to capture srcref and srcfile information for a given context\ntype LogEntryCreateContextType = {\n  action: \"createContext\",\n  session: ?string,\n  time: number,\n  step: number,\n  ctxId: CtxIdType,\n  label: string,\n  type: string,\n  prevCtxId: ?CtxIdType,\n  srcref: ?Array<number>,\n  srcfile: ?string,\n};\n\ntype LogEntryDefineType = {\n  action: \"define\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n  type: string, // TypeType,\n  label: string,\n  value: string,\n};\n\ntype LogEntryDependsOnType = {\n  action: \"dependsOn\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n  ctxId: CtxIdType,\n  depOnReactId: ReactIdType,\n};\ntype LogEntryDependsOnRemoveType = {\n  action: \"dependsOnRemove\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n  ctxId: CtxIdType,\n  depOnReactId: ReactIdType,\n};\n\ntype LogEntryEnterType = {\n  action: \"enter\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n  ctxId: CtxIdType,\n};\ntype LogEntryExitType = {\n  action: \"exit\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n  ctxId: CtxIdType,\n};\n\ntype LogEntryFreezeType = {\n  action: \"freeze\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n};\ntype LogEntryThawType = {\n  action: \"thaw\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n};\n\ntype LogEntryInvalidateStartType = {\n  action: \"invalidateStart\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n  ctxId: CtxIdType,\n  type: string,\n};\ntype LogEntryInvalidateEndType = {\n  action: \"invalidateEnd\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n  ctxId: CtxIdType,\n  type: string,\n};\n\ntype LogEntryInvalidateLaterType = {\n  action: \"invalidateLater\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n  ctxId: CtxIdType,\n  millis: number,\n};\n\ntype LogEntryIsolateEnterType = {\n  action: \"isolateEnter\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n  ctxId: CtxIdType,\n};\ntype LogEntryIsolateExitType = {\n  action: \"isolateExit\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n  ctxId: CtxIdType,\n};\n\ntype LogEntryIsolateInvalidateStartType = {\n  action: \"isolateInvalidateStart\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n  ctxId: CtxIdType,\n};\ntype LogEntryIsolateInvalidateEndType = {\n  action: \"isolateInvalidateEnd\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n  ctxId: CtxIdType,\n};\n\ntype LogEntryUserMark = {\n  action: \"userMark\",\n  session: ?string,\n  time: number,\n  step: number,\n};\n\ntype LogEntryIdleType = {\n  action: \"idle\",\n  session: ?string,\n  time: number,\n  step: number,\n};\n\ntype LogEntryUpdateNodeLabelType = {\n  action: \"updateNodeLabel\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n  label: string,\n};\n\ntype LogEntryValueChangeType = {\n  action: \"valueChange\",\n  session: ?string,\n  time: number,\n  step: number,\n  reactId: ReactIdType,\n  value: string,\n};\n\ntype LogEntryHasReactId =\n  | LogEntryDefineType\n  | LogEntryDependsOnType\n  | LogEntryDependsOnRemoveType\n  | LogEntryEnterType\n  | LogEntryExitType\n  | LogEntryFreezeType\n  | LogEntryThawType\n  | LogEntryInvalidateStartType\n  | LogEntryInvalidateEndType\n  | LogEntryInvalidateLaterType\n  | LogEntryIsolateEnterType\n  | LogEntryIsolateExitType\n  | LogEntryIsolateInvalidateStartType\n  | LogEntryIsolateInvalidateEndType\n  | LogEntryUpdateNodeLabelType\n  | LogEntryValueChangeType;\n\ntype LogEntryAnyType =\n  | LogEntryAsyncStartType\n  | LogEntryAsyncStopType\n  | LogEntryCreateContextType\n  | LogEntryDefineType\n  | LogEntryDependsOnType\n  | LogEntryDependsOnRemoveType\n  | LogEntryEnterType\n  | LogEntryExitType\n  | LogEntryFreezeType\n  | LogEntryThawType\n  | LogEntryInvalidateStartType\n  | LogEntryInvalidateEndType\n  | LogEntryInvalidateLaterType\n  | LogEntryIsolateEnterType\n  | LogEntryIsolateExitType\n  | LogEntryIsolateInvalidateStartType\n  | LogEntryIsolateInvalidateEndType\n  | LogEntryUserMark\n  | LogEntryIdleType\n  | LogEntryUpdateNodeLabelType\n  | LogEntryValueChangeType;\n\ntype LogType = Array<LogEntryAnyType>;\n\nexport { states as LogStates };\nexport type {\n  ActionsType,\n  ReactIdType,\n  CtxIdType,\n  LogType,\n  LogEntryHasReactId,\n  LogEntryAnyType,\n  LogEntryAsyncStartType,\n  LogEntryAsyncStopType,\n  LogEntryCreateContextType,\n  LogEntryDefineType,\n  LogEntryDependsOnType,\n  LogEntryDependsOnRemoveType,\n  LogEntryEnterType,\n  LogEntryExitType,\n  LogEntryFreezeType,\n  LogEntryThawType,\n  LogEntryInvalidateStartType,\n  LogEntryInvalidateEndType,\n  LogEntryInvalidateLaterType,\n  LogEntryIsolateEnterType,\n  LogEntryIsolateExitType,\n  LogEntryIsolateInvalidateStartType,\n  LogEntryIsolateInvalidateEndType,\n  LogEntryUserMark,\n  LogEntryIdleType,\n  LogEntryUpdateNodeLabelType,\n  LogEntryValueChangeType,\n};\n","// @flow\n\nimport cytoscape from \"cytoscape\"; // flowlint-line untyped-import:off\n\nimport _isNil from \"lodash/isNil\";\n\nimport { Graph } from \"./graph/Graph\";\nimport { GraphAtStep } from \"./graph/GraphAtStep\";\nimport * as updateGraph from \"./updateGraph\";\n\nimport type { CytoscapeType } from \"./cyto/cytoFlowType\";\nimport type { LogType } from \"./log/logStates\";\n\n// TODO-barret change to individual exports\nlet ret = {\n  log: ([]: LogType),\n  cyto: (cytoscape(): CytoscapeType),\n  getGraph: new GraphAtStep([]),\n  graph: new Graph([]),\n  curTick: (1: number),\n  updateGraph: updateGraph,\n  barret: (null: any),\n  displayTimeOnNodes:\n    // is not `false`\n    window.__APP_TIME__ === true || _isNil(window.__APP_TIME__),\n};\n\nexport { ret as rlog };\n","// @flow\n\nlet colors = {\n  // robby colors\n  progressBar: {\n    background: \"#f0f0f0\",\n    progress: \"#8e8e8e\",\n    userMark: \"#666666\", // matches right/left stop buttons\n    idle: \"#a3c586\",\n  },\n  nodes: {\n    label_text_color: \"#606060\",\n    label_text_opacity: 1,\n    label_background_color: \"white\",\n    label_background_opacity: 0.8,\n    invalidating: \"#969696\",\n    invalidated: \"#d9d9d9\",\n    calculating: \"#fcbf49\",\n    ready: \"#a3c586\",\n  },\n  // end robby colors\n\n  // regular colors\n  regular: {\n    white: \"#ffffff\",\n    black: \"#000000\",\n\n    // http://colorbrewer2.org/#type=sequential&scheme=YlGn&n=4\n    // #2-4\n    green1: \"#f7fcb9\", // ready\n    green2: \"#78c679\", // enter\n    green3: \"#238443\", // active enter\n\n    greenLite: \"#b2df8a\", // green from http://colorbrewer2.org/#type=qualitative&scheme=Paired&n=8\n\n    // http://colorbrewer2.org/#type=qualitative&scheme=Set1&n=9\n    red: \"#e41a1c\", // valueChange\n    blue: \"#377eb8\", // frozen\n    green: \"#4daf4a\", // enter\n    purple: \"#984ea3\", //\n    purpleLite: \"#f191ff\", //\n    orange: \"#ff7f00\", //\n    yellow: \"#ffff33\", //\n    brown: \"#a65628\", //\n    pink: \"#f781bf\", //\n    grey: \"#999999\", // invalidate\n\n    // http://colorbrewer2.org/#type=sequential&scheme=Greys&n=9\n    grey1: \"#d9d9d9\", // invalidate\n    grey2: \"#969696\", // active invalidate\n    grey3: \"#737373\", // active invalidate\n  },\n  edges: {\n    running: \"#676767\",\n    isolate: \"#818181\",\n    active: \"#818181\",\n    inactive: \"#ececec\",\n  },\n  ghostEdges: {\n    default: \"#3c3b39\",\n  },\n  frozen: {\n    default: \"#2171b5\",\n  },\n  // filtered colors\n  lite: {\n    white: \"#ffffff\",\n    black: \"#b2b2b2\", // personal attempt\n\n    // http://colorbrewer2.org/#type=sequential&scheme=YlGn&n=9\n    // #1-3\n    green1: \"#ffffe5\",\n    green2: \"#f7fcb9\",\n    green3: \"#d9f0a3\",\n\n    greenLite: \"#d6eec0\", // personal attempt\n    // http://colorbrewer2.org/#type=qualitative&scheme=Pastel1&n=9\n    red: \"#fbb4ae\",\n    blue: \"#b3cde3\",\n    green: \"#ccebc5\",\n    purple: \"#decbe4\",\n    orange: \"#fed9a6\",\n    yellow: \"#ffffcc\",\n    brown: \"#e5d8bd\",\n    pink: \"#fddaec\",\n    grey: \"#f2f2f2\",\n  },\n};\n\nexport { colors };\nexport default colors;\n","// @flow\n\nimport { rlog } from \"../rlog\";\n\nimport * as logEntry from \"../layout/logEntry\";\nimport * as progressBar from \"../layout/progressBar\";\n\nimport type { CytoscapeOptions } from \"../cyto/cytoFlowType\";\n\nlet atTick = function(\n  nextTick: number = rlog.curTick,\n  cytoOptions?: CytoscapeOptions = {}\n): boolean {\n  rlog.curTick = nextTick;\n  rlog.getGraph.displayAtStep(nextTick, rlog.cyto, cytoOptions);\n  progressBar.update();\n  logEntry.update();\n\n  return true;\n};\n\nexport { atTick };\n","// @flow\n\nimport * as outputCalc from \"./outputCalc\";\nimport * as step from \"./step\";\nimport * as userMarks from \"./userMarks\";\nimport * as idle from \"./idle\";\n\nimport type { CytoscapeOptions } from \"../cyto/cytoFlowType\";\n\nlet buttonPrevMark = function(cytoOptions?: CytoscapeOptions = {}) {\n  return userMarks.prevUserMark() || step.firstStep();\n};\nlet buttonNextMark = function(cytoOptions?: CytoscapeOptions = {}) {\n  return userMarks.nextUserMark() || step.lastStep();\n};\n\nlet buttonPrevIdle = function(cytoOptions?: CytoscapeOptions = {}) {\n  return idle.prevIdle() || step.firstStep();\n};\nlet buttonNextIdle = function(cytoOptions?: CytoscapeOptions = {}) {\n  return idle.nextIdle() || step.lastStep();\n};\n\nlet buttonPrevOutputCalc = function(cytoOptions?: CytoscapeOptions = {}) {\n  return outputCalc.prevOutputCalc() || step.firstStep();\n};\nlet buttonNextOutputCalc = function(cytoOptions?: CytoscapeOptions = {}) {\n  return outputCalc.nextOutputCalc() || step.lastStep();\n};\n\nlet buttonPrevStep = function(cytoOptions?: CytoscapeOptions = {}) {\n  return step.prevStep(cytoOptions) || step.firstStep();\n};\nlet buttonNextStep = function(cytoOptions?: CytoscapeOptions = {}) {\n  return step.nextStep(cytoOptions) || step.lastStep();\n};\n\nexport {\n  buttonPrevMark,\n  buttonNextMark,\n  buttonPrevIdle,\n  buttonNextIdle,\n  buttonPrevOutputCalc,\n  buttonNextOutputCalc,\n  buttonPrevStep,\n  buttonNextStep,\n};\n","// @flow\n\nimport $ from \"jquery\";\nimport _assign from \"lodash/assign\";\n\nimport { rlog } from \"../rlog\";\nimport { updateGraph } from \"../updateGraph\";\n\nimport type { SomeGraphData } from \"../graph/Graph\";\n\nimport type { CytoscapeOptions } from \"../cyto/cytoFlowType\";\n\nlet hoverData = function(\n  data: SomeGraphData,\n  cytoOptions?: CytoscapeOptions = {}\n) {\n  rlog.getGraph.updateHoverData(data);\n  return updateGraph(rlog.curTick, cytoOptions);\n};\nlet hoverDataReset = function(cytoOptions?: CytoscapeOptions = {}) {\n  rlog.getGraph.updateHoverDataReset();\n  return updateGraph(rlog.curTick, cytoOptions);\n};\nlet stickyDatas = function(\n  datas: Array<SomeGraphData>,\n  cytoOptions?: CytoscapeOptions = {}\n) {\n  rlog.getGraph.updateStickyDatas(datas);\n  return updateGraph(rlog.curTick, cytoOptions);\n};\nlet stickyDatasReset = function(cytoOptions?: CytoscapeOptions = {}) {\n  rlog.getGraph.updateStickyDatasReset();\n  return updateGraph(rlog.curTick, cytoOptions);\n};\nlet filterDatas = function(\n  datas: Array<SomeGraphData>,\n  cytoOptions?: CytoscapeOptions = {}\n) {\n  rlog.getGraph.updateFilterDatas(datas);\n  return updateGraph(rlog.curTick, _assign({ fit: true }, cytoOptions));\n};\nlet filterDatasReset = function(cytoOptions?: CytoscapeOptions = {}) {\n  rlog.getGraph.updateFilterDatasReset();\n  return updateGraph(rlog.curTick, _assign({ fit: true }, cytoOptions));\n};\nlet searchRegex = function(\n  searchRegex: RegExp,\n  cytoOptions?: CytoscapeOptions = {}\n) {\n  rlog.getGraph.updateSearchRegex(searchRegex);\n  return updateGraph(rlog.curTick, _assign({ fit: true }, cytoOptions));\n};\nlet searchRegexReset = function(cytoOptions?: CytoscapeOptions = {}) {\n  $(\"#search\").val(\"\");\n  rlog.getGraph.updateSearchRegexReset();\n  return updateGraph(rlog.curTick, _assign({ fit: true }, cytoOptions));\n};\nlet resetHoverStickyFilterData = function(cytoOptions?: CytoscapeOptions = {}) {\n  rlog.getGraph.resetHoverStickyFilterSearch();\n  return updateGraph(rlog.curTick, _assign({ fit: true }, cytoOptions));\n};\n\nexport {\n  hoverData,\n  hoverDataReset,\n  stickyDatas,\n  stickyDatasReset,\n  filterDatas,\n  filterDatasReset,\n  searchRegex,\n  searchRegexReset,\n  resetHoverStickyFilterData,\n};\n","// @flow\n\nimport { rlog } from \"../rlog\";\nimport { updateGraph } from \"../updateGraph\";\nimport { nextStepInArr, prevStepInArr } from \"./outputCalc\";\n\nimport type { CytoscapeOptions } from \"../cyto/cytoFlowType.js\";\n\nlet nextIdle = function(cytoOptions?: CytoscapeOptions = {}): boolean {\n  return nextStepInArr(rlog.getGraph.stepsIdle, cytoOptions);\n};\nlet prevIdle = function(cytoOptions?: CytoscapeOptions = {}): boolean {\n  return prevStepInArr(rlog.getGraph.stepsIdle, cytoOptions);\n};\n\nlet lastIdle = function() {\n  let nextTick =\n    rlog.getGraph.stepsIdle.length > 0\n      ? rlog.getGraph.stepsIdle[rlog.getGraph.stepsIdle.length - 1]\n      : rlog.log.length - 1;\n  return updateGraph(nextTick);\n};\nlet firstIdle = function() {\n  let nextTick =\n    rlog.getGraph.stepsIdle.length > 0 ? rlog.getGraph.stepsIdle[0] : 0;\n  return updateGraph(nextTick);\n};\n\nexport { nextIdle, prevIdle, lastIdle, firstIdle };\n","// @flow\n\nimport { atTick } from \"./atTick\";\nexport { atTick, atTick as updateGraph };\n\nexport {\n  nextOutputCalc,\n  prevOutputCalc,\n  firstOutputCalc,\n  lastOutputCalc,\n} from \"./outputCalc\";\nexport * from \"./idle\";\nexport * from \"./step\";\nexport * from \"./tick\";\nexport * from \"./searchString\";\nexport * from \"./hoverStickyFilterSearch\";\nexport * from \"./userMarks\";\nexport * from \"./buttons\";\nexport * from \"./resize\";\n","// @flow\n\nimport _sortedIndexOf from \"lodash/sortedIndexOf\";\nimport _sortedIndex from \"lodash/sortedIndex\";\n\nimport { rlog } from \"../rlog\";\nimport { updateGraph } from \"../updateGraph\";\n\nimport type { CytoscapeOptions } from \"../cyto/cytoFlowType\";\n\nlet nextStepInArr = function(\n  arr: Array<number>,\n  cytoOptions?: CytoscapeOptions = {}\n) {\n  let nextTick;\n  if (_sortedIndexOf(arr, rlog.curTick) !== -1) {\n    // at arr point, move the tick one ahead\n    nextTick = rlog.getGraph.nextStep(rlog.curTick);\n  } else {\n    // not at arr point,\n    nextTick = rlog.curTick;\n  }\n\n  // get next tick idx\n  let nextTickIdx = _sortedIndex(arr, nextTick);\n\n  let i, arrStep;\n  for (i = nextTickIdx; i < arr.length; i++) {\n    arrStep = arr[i];\n    if (_sortedIndexOf(rlog.getGraph.filteredStepsVisible, arrStep) >= 0) {\n      updateGraph(arrStep, cytoOptions);\n      return true;\n    }\n  }\n  return false;\n};\n\nlet prevStepInArr = function(\n  arr: Array<number>,\n  cytoOptions?: CytoscapeOptions = {}\n) {\n  let prevTick;\n  if (_sortedIndexOf(arr, rlog.curTick) !== -1) {\n    // at arr point, move the tick one back\n    prevTick = rlog.getGraph.prevStep(rlog.curTick);\n  } else {\n    // not at arr point,\n    prevTick = rlog.curTick;\n  }\n\n  // get next tick idx\n  let prevTickIdx = _sortedIndex(arr, prevTick) - 1;\n  if (prevTickIdx < 0) return false;\n\n  let i, arrStep;\n  for (i = prevTickIdx; i >= 0; i--) {\n    arrStep = arr[i];\n    if (_sortedIndexOf(rlog.getGraph.filteredStepsVisible, arrStep) >= 0) {\n      updateGraph(arrStep, cytoOptions);\n      return true;\n    }\n  }\n  return false;\n};\n\nlet nextOutputCalc = function(cytoOptions?: CytoscapeOptions = {}) {\n  return nextStepInArr(rlog.getGraph.stepsOutputCalc, cytoOptions);\n};\n\nlet prevOutputCalc = function(cytoOptions?: CytoscapeOptions = {}) {\n  return prevStepInArr(rlog.getGraph.stepsOutputCalc, cytoOptions);\n};\n\nlet lastOutputCalc = function(cytoOptions?: CytoscapeOptions = {}) {\n  let nextTick =\n    rlog.getGraph.stepsOutputCalc[rlog.getGraph.stepsOutputCalc.length - 1] ||\n    0;\n  return updateGraph(nextTick, cytoOptions);\n};\nlet firstOutputCalc = function(cytoOptions?: CytoscapeOptions = {}) {\n  let nextTick = rlog.getGraph.stepsOutputCalc[0] || 0;\n  return updateGraph(nextTick, cytoOptions);\n};\n\nexport {\n  nextOutputCalc,\n  prevOutputCalc,\n  firstOutputCalc,\n  lastOutputCalc,\n  nextStepInArr,\n  prevStepInArr,\n};\n","// @flow\n\nimport { rlog } from \"../rlog\";\nimport { atTick } from \"./atTick\";\n\nlet resize = function() {\n  // tell cytoscape to update it's layout bounds\n  rlog.cyto.resize();\n  // force a redraw\n  atTick(rlog.curTick, { fit: true, forceRedraw: true });\n};\n\nexport { resize };\n","// @flow\n\nimport $ from \"jquery\";\n\n// import console from \"../utils/console\";\nimport * as updateGraph from \"./hoverStickyFilterSearch\";\n\nimport { Node } from \"../graph/Node\";\nimport { Edge } from \"../graph/Edge\";\nimport { GhostEdge } from \"../graph/GhostEdge\";\n\nlet searchElement: JQuery;\n\n// when str length < 3 do not search\n// when str length = 0, reset filter\n// when str length >= 3, set filter to all elements that match\nlet searchStringWith = function(str: string) {\n  // if less than three chars...\n  if (str.length < 3) {\n    if (str.length === 0) {\n      // TODO-barret show warning of resetting\n      // console.log(\"resetting log!\");\n      return updateGraph.searchRegexReset();\n    } else {\n      // TODO-barret show warning of not enough characters\n      // console.log(\"do nothing\");\n      return false;\n    }\n  }\n  // escape the string\n  // https://stackoverflow.com/a/17606289\n  let escapeRegExp = function(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\n  };\n  let searchRegex = new RegExp(escapeRegExp(str));\n  return updateGraph.searchRegex(searchRegex);\n};\n\nlet searchStringSet = function(str: string) {\n  searchElement.val(str);\n  return searchStringWith(str);\n};\nlet searchStringClear = function() {\n  return searchStringSet(\"\");\n};\nlet searchStringClearNoUpdate = function() {\n  searchElement.val(\"\");\n};\n\nlet searchStringWithData = function(obj: Node | Edge | GhostEdge) {\n  // update the graph by searching for the key\n  if (obj instanceof Edge) {\n    return searchStringSet(obj.ghostKey);\n  }\n  return searchStringSet(obj.key);\n};\n\nlet searchStringContainer = function(searchElement_: JQuery) {\n  searchElement = searchElement_;\n  searchElement.on(\"input\", function(e) {\n    searchStringWith(\n      $(e.target)\n        .val()\n        .toString()\n    );\n  });\n};\n\nexport {\n  searchStringWith,\n  searchStringSet,\n  searchStringClear,\n  searchStringClearNoUpdate,\n  searchStringContainer,\n  searchStringWithData,\n};\n","// @flow\n\nimport { rlog } from \"../rlog\";\nimport { updateGraph } from \"../updateGraph\";\n\nimport type { CytoscapeOptions } from \"../cyto/cytoFlowType\";\n\nlet nextStep = function(cytoOptions?: CytoscapeOptions = {}) {\n  let nextTick = rlog.getGraph.nextStep(rlog.curTick);\n  if (nextTick === -1) return false;\n  return updateGraph(nextTick, cytoOptions);\n};\n\nlet prevStep = function(cytoOptions?: CytoscapeOptions = {}) {\n  let prevTick = rlog.getGraph.prevStep(rlog.curTick);\n  if (prevTick === -1) return false;\n  return updateGraph(prevTick, cytoOptions);\n};\n\nlet firstStep = function(cytoOptions?: CytoscapeOptions = {}) {\n  return updateGraph(rlog.getGraph.stepsVisible[0], cytoOptions);\n};\nlet lastStep = function(cytoOptions?: CytoscapeOptions = {}) {\n  return updateGraph(\n    rlog.getGraph.stepsVisible[rlog.getGraph.stepsVisible.length - 1],\n    cytoOptions\n  );\n};\n\nexport { nextStep, prevStep, firstStep, lastStep };\n","// @flow\n\nimport { rlog } from \"../rlog\";\nimport { updateGraph } from \"../updateGraph\";\n\nlet nextTick = function() {\n  if (rlog.curTick >= rlog.log.length) return false;\n  return updateGraph(rlog.curTick + 1);\n};\n\nlet prevTick = function() {\n  if (rlog.curTick <= 0) return false;\n  return updateGraph(rlog.curTick - 1);\n};\n\nexport { nextTick, prevTick };\n","// @flow\n\nimport _sortedIndexOf from \"lodash/sortedIndexOf\";\n\nimport { rlog } from \"../rlog\";\nimport { updateGraph } from \"../updateGraph\";\nimport { hasLength } from \"../graph/GraphAtStep\";\n\nimport type { CytoscapeOptions } from \"../cyto/cytoFlowType\";\n\nlet nextUserMark = function(cytoOptions?: CytoscapeOptions = {}) {\n  let nextTick;\n  if (_sortedIndexOf(rlog.getGraph.stepsUserMark, rlog.curTick) !== -1) {\n    // not at a user mark\n    if (hasLength(rlog.getGraph.filterDatas)) {\n      // if filtered, will go to previous step, then next step location\n      nextTick = rlog.getGraph.nextStep(rlog.getGraph.prevStep(rlog.curTick));\n    } else {\n      // if not filtered\n      nextTick = rlog.curTick;\n    }\n  } else {\n    // at user mark\n    // first move one step forward... then find next user mark\n    nextTick = rlog.getGraph.nextStep(rlog.curTick);\n  }\n  let val, i;\n  // move to user mark\n  for (i = 0; i < rlog.getGraph.stepsUserMark.length; i++) {\n    val = rlog.getGraph.stepsUserMark[i];\n    if (nextTick < val) {\n      updateGraph(val, cytoOptions);\n      return true;\n    }\n  }\n  return false;\n};\n\nlet prevUserMark = function(cytoOptions?: CytoscapeOptions = {}) {\n  let prevTick;\n  if (_sortedIndexOf(rlog.getGraph.stepsUserMark, rlog.curTick) !== -1) {\n    // not at a marked point\n    if (hasLength(rlog.getGraph.filterDatas)) {\n      // if filtered, will go to next step, then prev step location\n      prevTick = rlog.getGraph.prevStep(rlog.getGraph.nextStep(rlog.curTick));\n    } else {\n      // if not filtered\n      prevTick = rlog.curTick;\n    }\n  } else {\n    // at marked point\n    // first move one step backward... then find prev user mark\n    prevTick = rlog.getGraph.prevStep(rlog.curTick);\n  }\n  let val, i;\n  // move to user mark\n  for (i = rlog.getGraph.stepsUserMark.length - 1; i >= 0; i--) {\n    val = rlog.getGraph.stepsUserMark[i];\n    if (prevTick > val) {\n      return updateGraph(val, cytoOptions);\n    }\n  }\n  return false;\n};\n\nlet lastUserMark = function(cytoOptions?: CytoscapeOptions = {}) {\n  if (rlog.getGraph.stepsUserMark.length === 0) return false;\n  return updateGraph(\n    rlog.getGraph.stepsUserMark[rlog.getGraph.stepsUserMark.length - 1],\n    cytoOptions\n  );\n};\nlet firstUserMark = function(cytoOptions?: CytoscapeOptions = {}) {\n  if (rlog.getGraph.stepsUserMark.length === 0) return false;\n  return updateGraph(rlog.getGraph.stepsUserMark[0], cytoOptions);\n};\n\nexport { nextUserMark, prevUserMark, firstUserMark, lastUserMark };\n","// @flow\n\nimport _flatten from \"lodash/flatten\";\nimport _map from \"lodash/map\";\n\n// // Made because...\n// // has an error as there is a double definition of _.flatMap.\n// // One for an Array (defined first)\n// // One for an Object (defined second, which stomps the first)\n// flatMap<T, U>(\n//   array?: ?$ReadOnlyArray<T>,\n//   iteratee?: ?FlatMapIteratee<T, U>\n// ): Array<U>;\n// flatMap<T: Object, U>(\n//   object: T,\n//   iteratee?: OFlatMapIteratee<T, U>\n// ): Array<U>;\n\nlet flatMap = function<T, U>(\n  array: ?$ReadOnlyArray<T>,\n  iteratee: (item: T, index: number, array: ?$ReadOnlyArray<T>) => Array<U>\n): Array<U> {\n  return _flatten(_map(array, iteratee));\n};\n\nexport { flatMap };\n","// @flow\n\nfunction mapValues<T>(x: Map<string, T>): Array<T> {\n  return Array.from(x.values());\n}\nfunction mapKeys<T>(x: Map<string, T>): Array<string> {\n  return Array.from(x.keys());\n}\n\nexport { mapValues, mapKeys };\n","// @flow\n\nlet console = window.console || {\n  log: function(...data: Array<any>): void {},\n  warn: function(...data: Array<any>): void {},\n  error: function(...data: Array<any>): void {},\n};\n\nexport default console;\n","// @flow\n\nlet roundDecimals = function(value: number, decimals: number): number {\n  let roundedNumber = Math.round(Number(`${value}e${decimals}`));\n  return Number(`${roundedNumber}e-${decimals}`);\n};\n\nexport { roundDecimals };\n"],"sourceRoot":""}